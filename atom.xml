<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GC World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.freelabor.work/"/>
  <updated>2019-08-18T09:33:56.000Z</updated>
  <id>http://www.freelabor.work/</id>
  
  <author>
    <name>GC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C Basic 02</title>
    <link href="http://www.freelabor.work/2019/08/18/D1EF8EC4-5845-42B9-94F1-9192C0EDE5D2/"/>
    <id>http://www.freelabor.work/2019/08/18/D1EF8EC4-5845-42B9-94F1-9192C0EDE5D2/</id>
    <published>2019-08-18T09:17:54.000Z</published>
    <updated>2019-08-18T09:33:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础数据类型输出"><a href="#基础数据类型输出" class="headerlink" title="基础数据类型输出"></a>基础数据类型输出</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">basicDataTypeDemoOutput</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"数据类型\t列子\t\t\t字节数\n"</span>);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"int:\t%d\t\t\t%ld\n"</span>,i,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">short</span> s = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"short:\t%d\t\t\t%ld\n"</span>,s,<span class="keyword">sizeof</span>(<span class="keyword">short</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> l = <span class="number">111111</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"long:\t%ld\t\t%ld\n"</span>,l,<span class="keyword">sizeof</span>(<span class="keyword">long</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> f = <span class="number">2.013</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"float:\t%f\t%ld\n"</span>,f,<span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> d = <span class="number">3.1415926</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"double:\t%lf\t%ld\n"</span>,d,<span class="keyword">sizeof</span>(<span class="keyword">double</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c = <span class="string">'c'</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"char:\t%c\t\t\t%ld\n"</span>,c,<span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* str = <span class="string">"string"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"string:\t%s\t\t%ld\n"</span>,str,<span class="keyword">sizeof</span>(<span class="keyword">char</span>*));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="For循环输出"><a href="#For循环输出" class="headerlink" title="For循环输出"></a>For循环输出</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">forloopDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n&lt;<span class="number">5</span>; n++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-----\n"</span>);</span><br><span class="line"><span class="keyword">int</span> n =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; n&lt;<span class="number">10</span>; n++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="从控制台输入"><a href="#从控制台输入" class="headerlink" title="从控制台输入"></a>从控制台输入</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inputValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入一个整数："</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i的值：%d\n"</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="基本类型指针"><a href="#基本类型指针" class="headerlink" title="基本类型指针"></a>基本类型指针</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">basicTypePointerDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;i;<span class="comment">//    创建一个int类型的指针变量p。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p的值就是i这个变量的内存地址：%#x\n"</span>,p);<span class="comment">//    p的值就是i这个变量的内存地址：0x5fbff6cc</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i的值通过指针p来输出：%d\n"</span>,*p);</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> f = <span class="number">3.14f</span>;</span><br><span class="line"><span class="keyword">float</span> *fp = &amp;f;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"fp的值：%#x\n"</span>,fp);<span class="comment">//    fp的值：0x5fbff6bc</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%f\n"</span>,*fp);<span class="comment">//    输出：3.140000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="指针操作"><a href="#指针操作" class="headerlink" title="指针操作"></a>指针操作</h1><p> 更改指针<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">changeP</span><span class="params">(<span class="keyword">int</span> *p)</span> </span>&#123;</span><br><span class="line">*p = <span class="number">127</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> 分配指针<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">assignPointer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;i;<span class="comment">//    &amp;是取地址符号</span></span><br><span class="line"><span class="comment">//    输出地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i的地址：%#x\n"</span>,&amp;i);<span class="comment">//    i的地址：0x5fbff6cc</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p的地址：%#x\n"</span>,&amp;p);<span class="comment">//    p的地址：0x5fbff6c0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i—&gt;p: %d\n"</span>,*p);<span class="comment">//    i—&gt;p: 42</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i: %d\n"</span>,i);<span class="comment">//    i: 42</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    i再次赋值</span></span><br><span class="line">i = <span class="number">84</span>;<span class="comment">//    间接赋值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i—&gt;p(2):%d\n"</span>,*p);<span class="comment">//    i—&gt;p(2):84</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i(2):%d\n"</span>,i);<span class="comment">//    i(2):84</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    对p指向的内存地址直接进行操作</span></span><br><span class="line">*p = <span class="number">235</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i—&gt;p(3):%d\n"</span>,*p);<span class="comment">//    i—&gt;p(3):235</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i(3):%d\n"</span>,i);<span class="comment">//    i(3):235</span></span><br><span class="line"></span><br><span class="line">changeP(p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i—&gt;p(4):%d\n"</span>,*p);<span class="comment">//    i—&gt;p(4):127</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i(4):%d\n"</span>,i);<span class="comment">//    i(4):127</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="空指针示例"><a href="#空指针示例" class="headerlink" title="空指针示例"></a>空指针示例</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nullPointerDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    空指针的默认值为0</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%#x\n"</span>,p);<span class="comment">//    输出0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    p = 100;//    错误复制</span></span><br><span class="line"><span class="comment">//    printf("%#d\n",*p);//    无法输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="多级指针示例"><a href="#多级指针示例" class="headerlink" title="多级指针示例"></a>多级指针示例</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mulLevelPointerDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span>* p1 = &amp;i;<span class="comment">//    p1保存a的地址</span></span><br><span class="line"><span class="keyword">int</span>** p2 = &amp;p1;<span class="comment">//    p2保存p1的地址，二级指针</span></span><br><span class="line"><span class="keyword">int</span>*** p3 = &amp;p2;<span class="comment">//  p3保存p2的地址，三级指针</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p1: %#x\n"</span>,p1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p2: %#x\n"</span>,p2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p3: %#x\n"</span>,p3);</span><br><span class="line"></span><br><span class="line">*p1 = <span class="number">90</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,<span class="string">"一级指针操作后："</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a: %d\n"</span>,i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p1输出：%d\n"</span>,*p1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p2输出：%d\n"</span>,**p2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p3输出：%d\n"</span>,***p3);</span><br><span class="line"></span><br><span class="line">**p2 = <span class="number">235</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,<span class="string">"二级指针操作后："</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a: %d\n"</span>,i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p1输出：%d\n"</span>,*p1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p2输出：%d\n"</span>,**p2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"p3输出：%d\n"</span>,***p3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础数据类型输出&quot;&gt;&lt;a href=&quot;#基础数据类型输出&quot; class=&quot;headerlink&quot; title=&quot;基础数据类型输出&quot;&gt;&lt;/a&gt;基础数据类型输出&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C Basic 01</title>
    <link href="http://www.freelabor.work/2019/08/18/8538B10D-9298-4AFE-B690-6FA82688C3A5/"/>
    <id>http://www.freelabor.work/2019/08/18/8538B10D-9298-4AFE-B690-6FA82688C3A5/</id>
    <published>2019-08-18T09:17:00.000Z</published>
    <updated>2019-08-18T09:33:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Main-入口"><a href="#Main-入口" class="headerlink" title="Main 入口"></a>Main 入口</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">42</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="h文件"><a href="#h文件" class="headerlink" title=".h文件"></a>.h文件</h1><p>必须要引入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>一般定义抽象定义</p><h1 id="c文件"><a href="#c文件" class="headerlink" title=".c文件"></a>.c文件</h1><p>抽象的具体实现</p><h1 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h1><p>TODO</p><h1 id="方法的定义"><a href="#方法的定义" class="headerlink" title="方法的定义"></a>方法的定义</h1><p>TODO</p><h1 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h1><p>输出到控制台<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(“%s\n”,“Hello World!”);</span><br></pre></td></tr></table></figure></p><p>输出到文件<br>TODO</p><h1 id="日志工具类"><a href="#日志工具类" class="headerlink" title="日志工具类"></a>日志工具类</h1><p>首先，定义CLog.h<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CLog_h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLog_h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p><p>然后，实现CLog.c</p><p> 引入头文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CLog.h"</span></span></span><br></pre></td></tr></table></figure></p><p> 具体实现<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    带tag的数字输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">logi</span><span class="params">(<span class="keyword">char</span>* tag,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s:%d\n"</span>,tag,i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出数字</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">logiln</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    带tag的字符串输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">logs</span><span class="params">(<span class="keyword">char</span>* tag,<span class="keyword">char</span>* s)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s:%s\n"</span>,tag,s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出字符串</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">logsln</span><span class="params">(<span class="keyword">char</span>* s)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>,s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出指针地址</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">logpd</span><span class="params">(<span class="keyword">char</span>* tag,<span class="keyword">int</span>* p)</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s指针地址:%#x\n"</span>,tag,p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="普通工具类"><a href="#普通工具类" class="headerlink" title="普通工具类"></a>普通工具类</h1><p> 定义CUtils.h<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CUtils_h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CUtils_h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CLog.h"</span></span></span><br></pre></td></tr></table></figure></p><p> 实现CUtils.c</p><p>引入：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"CUtils.h"</span></span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Main-入口&quot;&gt;&lt;a href=&quot;#Main-入口&quot; class=&quot;headerlink&quot; title=&quot;Main 入口&quot;&gt;&lt;/a&gt;Main 入口&lt;/h1&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
    
      <category term="C" scheme="http://www.freelabor.work/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hexo start!</title>
    <link href="http://www.freelabor.work/2019/08/18/351B570B-86B0-4468-8F94-E0D1D6A0EEB7/"/>
    <id>http://www.freelabor.work/2019/08/18/351B570B-86B0-4468-8F94-E0D1D6A0EEB7/</id>
    <published>2019-08-18T09:12:20.000Z</published>
    <updated>2019-08-18T09:33:56.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h4><p><a href>文档 | Hexo</a>(<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/index.html</a>)</p><h4 id="Advanced"><a href="#Advanced" class="headerlink" title="Advanced"></a>Advanced</h4><p><a href="http://www.zhaiqianfeng.com/2017/05/hexo-plantuml.html" target="_blank" rel="noopener">在hexo中使用PlantUML来画UML | 宅前疯</a></p><p><a href="https://panzhenglian.com/2017/05/21/%E5%88%86%E4%BA%ABhexo%E6%97%B6%E5%BA%8F%E5%9B%BE%E5%92%8C%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%8F%92%E4%BB%B6/" target="_blank" rel="noopener">分享hexo时序图和流程图插件 | 平凡</a></p><p><a href="https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html" target="_blank" rel="noopener">如何让你的HEXO博客支持手写流程图？ | 慧行说</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> * argv[])</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">42</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h4&gt;&lt;p&gt;&lt;a href&gt;文档 | Hexo&lt;/a&gt;(&lt;a href=&quot;https://hexo.io/zh-cn/docs/
      
    
    </summary>
    
    
      <category term="utils" scheme="http://www.freelabor.work/tags/utils/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GC World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.freelabor.work/"/>
  <updated>2020-05-27T03:52:29.103Z</updated>
  <id>http://www.freelabor.work/</id>
  
  <author>
    <name>GC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用反射、注解、动态代理实现OnClick事件的自动注入</title>
    <link href="http://www.freelabor.work/2020/05/21/4821B42E-6850-43FC-9C6D-29188C8E3304/"/>
    <id>http://www.freelabor.work/2020/05/21/4821B42E-6850-43FC-9C6D-29188C8E3304/</id>
    <published>2020-05-21T08:13:07.000Z</published>
    <updated>2020-05-27T03:52:29.103Z</updated>
    
    <content type="html"><![CDATA[<p>需要先创建MockOnClick注解、然后通过在Activity注入，在注入的方法里面，进行动态代理。</p><h1 id="简单实现"><a href="#简单实现" class="headerlink" title="简单实现"></a>简单实现</h1><h2 id="定义MockOnClickAnnotation"><a href="#定义MockOnClickAnnotation" class="headerlink" title="定义MockOnClickAnnotation"></a>定义MockOnClickAnnotation</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 16:24</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MockOnClickAnnotation &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="keyword">int</span>[] value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建ClickEventInjector"><a href="#创建ClickEventInjector" class="headerlink" title="创建ClickEventInjector"></a>创建ClickEventInjector</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 16:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClickEventInjector</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ClickEventInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(<span class="keyword">final</span> Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有的Field：&#123;<span class="doctag">@link</span> Class#getDeclaredMethods()&#125; ()&#125; —&gt; methods</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Method[] methods = activity.getClass().getDeclaredMethods();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 遍历fields:&#123;<span class="doctag">@link</span> Method[]&#125;,过滤有&#123;<span class="doctag">@link</span> MockOnClickAnnotation&#125;的&#123;<span class="doctag">@link</span> Method&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (Method method :</span><br><span class="line">                methods) &#123;</span><br><span class="line">            <span class="keyword">if</span> (method.isAnnotationPresent(MockOnClickAnnotation.class)) &#123;</span><br><span class="line">                MockOnClickAnnotation annotation = method.getAnnotation(MockOnClickAnnotation.class);</span><br><span class="line">                <span class="keyword">int</span>[] ids = annotation.value();</span><br><span class="line">                <span class="keyword">for</span> (Integer id :</span><br><span class="line">                        ids) &#123;</span><br><span class="line">                    <span class="keyword">final</span> View view = activity.findViewById(id);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//    使用动态代理进行实现</span></span><br><span class="line">                    <span class="keyword">final</span> View.OnClickListener l = (View.OnClickListener) Proxy.newProxyInstance(activity.getClassLoader(), <span class="keyword">new</span> Class[]&#123;View.OnClickListener.class&#125;, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> method.invoke(activity, args);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    view.setOnClickListener(l);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 在这里，&#123;<span class="doctag">@link</span> View&#125;可以设置点击监听，但是需要有一个代理响应才行，</span></span><br><span class="line"><span class="comment">                     * &#123;<span class="doctag">@link</span> Activity&#125;本身没有点击事件，所以需要用&#123;<span class="doctag">@link</span> View.OnClickListener&#125;才行</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line"><span class="comment">//                    view.setOnClickListener(new View.OnClickListener() &#123;</span></span><br><span class="line"><span class="comment">//                        @Override</span></span><br><span class="line"><span class="comment">//                        public void onClick(View v) &#123;</span></span><br><span class="line"><span class="comment">//                            /**</span></span><br><span class="line"><span class="comment">//                             * 这里是不是可以这样执行呢？其实这样也是可以的</span></span><br><span class="line"><span class="comment">//                             */</span></span><br><span class="line"><span class="comment">//                            if (activity instanceof View.OnClickListener) &#123;</span></span><br><span class="line"><span class="comment">//                                ((View.OnClickListener) activity).onClick(view);</span></span><br><span class="line"><span class="comment">//                            &#125;</span></span><br><span class="line"><span class="comment">//                        &#125;</span></span><br><span class="line"><span class="comment">//                    &#125;);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="高级实现"><a href="#高级实现" class="headerlink" title="高级实现"></a>高级实现</h1><p>如果是想要将点击和长按点击都实现在里面呢？那么这个时候就要优化一下才行了。<br>需要多创建一个点击事件的元注解</p><h2 id="创建事件类型元注解"><a href="#创建事件类型元注解" class="headerlink" title="创建事件类型元注解"></a>创建事件类型元注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.ANNOTATION_TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EventType &#123;</span><br><span class="line">    Class&lt;?&gt; listenType();</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">listenerSetterMethodName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点击事件注解"><a href="#点击事件注解" class="headerlink" title="点击事件注解"></a>点击事件注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:15</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@EventType</span>(listenType = View.OnClickListener.class, listenerSetterMethodName = <span class="string">"setOnClickListener"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MockOnClick &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="keyword">int</span>[] value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="长按点击事件注解"><a href="#长按点击事件注解" class="headerlink" title="长按点击事件注解"></a>长按点击事件注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@EventType</span>(listenType = View.OnLongClickListener.class,listenerSetterMethodName = <span class="string">"setOnLongClickListener"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MockOnLongClick &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="keyword">int</span>[] value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义注入器"><a href="#定义注入器" class="headerlink" title="定义注入器"></a>定义注入器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElegantClickInjector</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ElegantClickInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(<span class="keyword">final</span> Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取字节码对象：&#123;<span class="doctag">@link</span> Activity#getClass()&#125; —&gt; &#123;<span class="doctag">@link</span> Class&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Class&lt;? extends Activity&gt; clazz = activity.getClass();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取Activity声明的方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Method[] declaredMethods = clazz.getDeclaredMethods();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> Method method : declaredMethods) &#123;</span><br><span class="line"></span><br><span class="line">            Annotation[] annotations = method.getAnnotations();</span><br><span class="line">            <span class="keyword">for</span> (Annotation annotation :</span><br><span class="line">                    annotations) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 注解上判断是否存在某个元注解，需要先获取annotationType:&#123;<span class="doctag">@link</span> Annotation#annotationType()&#125;</span></span><br><span class="line"><span class="comment">                 * 然后通过&#123;<span class="doctag">@link</span> Class#isAnnotationPresent(Class)&#125; 来判断</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                Class&lt;? extends Annotation&gt; annotationType = annotation.annotationType();</span><br><span class="line">                <span class="keyword">if</span> (annotationType.isAnnotationPresent(EventType.class)) &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 拿到元注解&#123;<span class="doctag">@link</span> Class#getAnnotation(Class)&#125; —&gt; &#123;<span class="doctag">@link</span> Annotation&#125;/&#123;<span class="doctag">@link</span> EventType&#125;</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    EventType eventType = annotationType.getAnnotation(EventType.class);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 获取到事件类型元注解上的事件的字节码&#123;<span class="doctag">@link</span> EventType#listenType()&#125;</span></span><br><span class="line"><span class="comment">                     * 和设置点击事件的方法&#123;<span class="doctag">@link</span> EventType#listenerSetterMethodName()&#125;</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    Class&lt;?&gt; listenTypeClass = eventType.listenType();</span><br><span class="line">                    String listenerSetterMethodName = eventType.listenerSetterMethodName();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 已经拿到监听事件的字节码和监听方法的名称了，接下来就需要拿到对应的ids</span></span><br><span class="line"><span class="comment">                     * 但annotation不能直接拿到id，需要先通过&#123;<span class="doctag">@link</span> annotationType&#125;拿到声明的方法。</span></span><br><span class="line"><span class="comment">                     * 当然如果使用&#123;<span class="doctag">@code</span> &#123;<span class="doctag">@link</span> annotation&#125; instanceof &#123;<span class="doctag">@link</span> MockOnClick&#125;/&#123;<span class="doctag">@link</span> MockOnLongClick&#125;也可以，</span></span><br><span class="line"><span class="comment">                     * 但是扩展性不好，所以通过字节码的获取声明的方法来那是最好的了。</span></span><br><span class="line"><span class="comment">                     * &#123;<span class="doctag">@link</span> Class#getDeclaredMethod(String, Class[])&#125; —&gt; &#123;<span class="doctag">@link</span> Method&#125;</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Method valueMethod = annotationType.getDeclaredMethod(<span class="string">"value"</span>);</span><br><span class="line">                        <span class="comment">/**</span></span><br><span class="line"><span class="comment">                         * &#123;<span class="doctag">@link</span> Method#invoke(Object, Object...)&#125; —&gt; &#123;<span class="doctag">@link</span> Integer[]&#125;</span></span><br><span class="line"><span class="comment">                         */</span></span><br><span class="line">                        Object invokeResult = valueMethod.invoke(annotation);</span><br><span class="line">                        <span class="keyword">if</span> (invokeResult <span class="keyword">instanceof</span> <span class="keyword">int</span>[]) &#123;</span><br><span class="line">                            <span class="keyword">int</span>[] ids = (<span class="keyword">int</span>[]) invokeResult;</span><br><span class="line"></span><br><span class="line">                            <span class="comment">/**</span></span><br><span class="line"><span class="comment">                             * 拿到&#123;<span class="doctag">@link</span> ids&#125;，遍历并且找到对应的View</span></span><br><span class="line"><span class="comment">                             */</span></span><br><span class="line">                            <span class="keyword">for</span> (Integer id :</span><br><span class="line">                                    ids) &#123;</span><br><span class="line">                                View view = activity.findViewById(id);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                 * 最后思考一下如何调用Activity的方法了</span></span><br><span class="line"><span class="comment">                                 */</span></span><br><span class="line">                                method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                                Object listenerProxy = Proxy.newProxyInstance(listenTypeClass.getClassLoader(), <span class="keyword">new</span> Class[]&#123;listenTypeClass&#125;, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                                    <span class="meta">@Override</span></span><br><span class="line">                                    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method m, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                                        <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                         * 在这里执行&#123;<span class="doctag">@link</span> Activity&#125;的方法</span></span><br><span class="line"><span class="comment">                                         */</span></span><br><span class="line">                                        <span class="keyword">return</span> method.invoke(activity, args);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                 * 寻找特定的方法&#123;<span class="doctag">@link</span> Class#getMethod(String, Class[])&#125;</span></span><br><span class="line"><span class="comment">                                 */</span></span><br><span class="line">                                Method setter = view.getClass().getMethod(listenerSetterMethodName, listenTypeClass);</span><br><span class="line">                                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                 * 在这里执行监听方法，出入一个监听器的代理对象进去&#123;<span class="doctag">@link</span> listenerProxy&#125;，而在动态代理那里，真正执行的确实&#123;<span class="doctag">@link</span> Activity&#125;的方法</span></span><br><span class="line"><span class="comment">                                 */</span></span><br><span class="line">                                setter.invoke(view, listenerProxy);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test"><a href="#Test" class="headerlink" title="@Test"></a>@Test</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElegantClickActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_study);</span><br><span class="line">        ElegantClickInjector.inject(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MockOnClick</span>(&#123;R.id.mock_tv,R.id.android_tv&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.android_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"android-mock"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.mock_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"Mock-mock"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里的长按点击方法要和&#123;<span class="doctag">@link</span> View#setOnLongClickListener(View.OnLongClickListener)&#125;一样，要有返回值才行。</span></span><br><span class="line"><span class="comment">     * 否则动态代理是会提示参数错误问题，而且必须要添加view进去</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@MockOnLongClick</span>(&#123;R.id.mock_tv,R.id.android_tv&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.android_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"android-mock-long"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.mock_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"Mock-mock-long"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需要先创建MockOnClick注解、然后通过在Activity注入，在注入的方法里面，进行动态代理。&lt;/p&gt;
&lt;h1 id=&quot;简单实现&quot;&gt;&lt;a href=&quot;#简单实现&quot; class=&quot;headerlink&quot; title=&quot;简单实现&quot;&gt;&lt;/a&gt;简单实现&lt;/h1&gt;&lt;h2 id
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java进阶" scheme="http://www.freelabor.work/tags/java%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>实现Intent注入工具</title>
    <link href="http://www.freelabor.work/2020/05/19/5E1BDC3B-57B1-4395-92D8-8B6AD5C4BA3D/"/>
    <id>http://www.freelabor.work/2020/05/19/5E1BDC3B-57B1-4395-92D8-8B6AD5C4BA3D/</id>
    <published>2020-05-19T07:55:56.000Z</published>
    <updated>2020-05-27T03:52:29.105Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义注解类"><a href="#定义注解类" class="headerlink" title="定义注解类"></a>定义注解类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> AutoWired &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定义注入工具类"><a href="#定义注入工具类" class="headerlink" title="定义注入工具类"></a>定义注入工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 15:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InjectUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InjectUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//no instance</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有成员变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Field[] declaredFields = activity.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (declaredFields != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Field f :</span><br><span class="line">                    declaredFields) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 判断是否存在&#123;<span class="doctag">@link</span> InjectView&#125;的注解</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">if</span> (f.isAnnotationPresent(InjectView.class)) &#123;</span><br><span class="line">                        InjectView annotation = f.getAnnotation(InjectView.class);<span class="comment">//    拿到对应的注解</span></span><br><span class="line">                        <span class="keyword">int</span> id = ((InjectView) annotation).value();<span class="comment">//    获取到对应的id值</span></span><br><span class="line">                        View v = activity.findViewById(id);<span class="comment">//    通过activity找到view</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            f.setAccessible(<span class="keyword">true</span>);<span class="comment">//    暴力设置成员变量可访问</span></span><br><span class="line">                            f.set(activity, v);<span class="comment">//    通过反射设置成员变量的值</span></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定义实体类"><a href="#定义实体类" class="headerlink" title="定义实体类"></a>定义实体类</h1><h2 id="User"><a href="#User" class="headerlink" title="User"></a>User</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"name= "</span> + name + <span class="string">",age="</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Gift"><a href="#Gift" class="headerlink" title="Gift"></a>Gift</h2><ol><li>实现<code>Parcelable</code></li><li>自动生成方法</li><li>定义成员变量</li><li>在writeToParcel方法，有序序列化</li><li>在Gift(Parcel in)有序反序列化，要和在writeToParcel方法的顺序一致。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gift</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> weight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Gift</span><span class="params">(String name, <span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Gift</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">        name = in.readString();</span><br><span class="line">        weight = in.readInt();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;Gift&gt; CREATOR = <span class="keyword">new</span> Creator&lt;Gift&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Gift <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Gift(in);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Gift[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Gift[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name);</span><br><span class="line">        dest.writeInt(weight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">"Gift=[name=%s,weight=%d]"</span>, name, weight);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="传递数据"><a href="#传递数据" class="headerlink" title="传递数据"></a>传递数据</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> intent = Intent()</span><br><span class="line">  intent.setClass(activity as Context, SecondActivity::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span>;</span><br><span class="line">  intent.putExtra(<span class="string">"intKey"</span>, <span class="number">3140</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"defaultInt"</span>, <span class="number">42</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"c"</span>, <span class="string">'z'</span>)</span><br><span class="line"><span class="comment">//            intent.putExtra("b", 12)</span></span><br><span class="line">  intent.putExtra(<span class="string">"f"</span>, <span class="number">3.1415926f</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"d"</span>, <span class="number">1.123456</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"l"</span>, <span class="number">13800138000L</span>)</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"s"</span>, <span class="string">"字符串"</span>)</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"user"</span>, User(<span class="string">"Kennedy"</span>, <span class="number">33</span>))</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"intArray"</span>, arrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"strList"</span>, mutableListOf&lt;String&gt;(<span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>) as ArrayList)</span><br><span class="line"></span><br><span class="line">  intent.putExtra(</span><br><span class="line">      <span class="string">"giftList"</span>,</span><br><span class="line">      mutableListOf&lt;Gift&gt;(Gift(<span class="string">"礼物1"</span>, <span class="number">2</span>), Gift(<span class="string">"礼物2"</span>, <span class="number">4</span>), Gift(<span class="string">"礼物3"</span>, <span class="number">8</span>)) as ArrayList</span><br><span class="line">  )</span><br><span class="line">  intent.putExtra(</span><br><span class="line">      <span class="string">"giftArray"</span>,</span><br><span class="line">      arrayOf(Gift(<span class="string">"礼物4"</span>, <span class="number">16</span>), Gift(<span class="string">"礼物5"</span>, <span class="number">32</span>), Gift(<span class="string">"礼物6"</span>, <span class="number">64</span>)) as Array&lt;Gift&gt;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  activity?.startActivity(intent)</span><br></pre></td></tr></table></figure><h1 id="注入并自动获取"><a href="#注入并自动获取" class="headerlink" title="注入并自动获取"></a>注入并自动获取</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@InjectView</span>(R.id.second_tv)</span><br><span class="line">    TextView tvSecond;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span>(<span class="string">"intKey"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span>()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> defaultInt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span> b;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> f;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> d;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> Long l;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> String s;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> String ss;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> Integer[] intArray;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; strList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Gift&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Gift&gt; giftList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> Gift[] giftArray;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_second);</span><br><span class="line"></span><br><span class="line">        InjectUtils.inject(<span class="keyword">this</span>);</span><br><span class="line">        IntentInjectUtil.inject(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//    遍历所有的自动注入字段的值</span></span><br><span class="line">        Field[] declaredFields = SecondActivity.class.getDeclaredFields();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (Field f :</span><br><span class="line">                declaredFields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (f.isAnnotationPresent(AutoWired.class)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Object value = f.get(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (f.getType().isArray()) &#123;<span class="comment">//    处理数组或者集合的情况</span></span><br><span class="line">                        Object[] vs = (Object[]) value;</span><br><span class="line">                        StringBuilder sb1 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                        <span class="keyword">for</span> (Object o :</span><br><span class="line">                                vs) &#123;</span><br><span class="line">                            sb1.append(o).append(<span class="string">","</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (sb1.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            sb1.delete(sb1.length() - <span class="number">1</span>, sb1.length());</span><br><span class="line">                        &#125;</span><br><span class="line">                        value = sb1.toString();</span><br><span class="line">                    &#125;</span><br><span class="line">                    sb.append(f.getName()).append(<span class="string">" - "</span>).append(value).append(<span class="string">"\n"</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        tvSecond.setText(sb.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定义注解类&quot;&gt;&lt;a href=&quot;#定义注解类&quot; class=&quot;headerlink&quot; title=&quot;定义注解类&quot;&gt;&lt;/a&gt;定义注解类&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java进阶" scheme="http://www.freelabor.work/tags/java%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>模仿ButterKnife的BindView</title>
    <link href="http://www.freelabor.work/2020/05/19/F608C5DA-7844-41C9-B5CB-9306298CEDEF/"/>
    <id>http://www.freelabor.work/2020/05/19/F608C5DA-7844-41C9-B5CB-9306298CEDEF/</id>
    <published>2020-05-19T07:50:41.000Z</published>
    <updated>2020-05-27T03:52:29.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义注解"><a href="#定义注解" class="headerlink" title="定义注解"></a>定义注解</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> InjectView &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="function"><span class="keyword">int</span> <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定义注入工具类"><a href="#定义注入工具类" class="headerlink" title="定义注入工具类"></a>定义注入工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InjectUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InjectUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//no instance</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有成员变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Field[] declaredFields = activity.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (declaredFields != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Field f :</span><br><span class="line">                    declaredFields) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 判断是否存在&#123;<span class="doctag">@link</span> InjectView&#125;的注解</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">if</span> (f.isAnnotationPresent(InjectView.class)) &#123;</span><br><span class="line">                        InjectView annotation = f.getAnnotation(InjectView.class);<span class="comment">//    拿到对应的注解</span></span><br><span class="line">                        <span class="keyword">int</span> id = ((InjectView) annotation).value();<span class="comment">//    获取到对应的id值</span></span><br><span class="line">                        View v = activity.findViewById(id);<span class="comment">//    通过activity找到view</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            f.setAccessible(<span class="keyword">true</span>);<span class="comment">//    暴力设置成员变量可访问</span></span><br><span class="line">                            f.set(activity, v);<span class="comment">//    通过反射设置成员变量的值</span></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="在Activity页面使用注解并且初始化注入方法"><a href="#在Activity页面使用注解并且初始化注入方法" class="headerlink" title="在Activity页面使用注解并且初始化注入方法"></a>在Activity页面使用注解并且初始化注入方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class MainActivity : AppCompatActivity() &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@InjectView</span>(R.id.nav_view)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> navView: BottomNavigationView? = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">     <span class="function">override fun <span class="title">onCreate</span><span class="params">(savedInstanceState: Bundle?)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//    自定义注入工具</span></span><br><span class="line">        InjectUtils.inject(<span class="keyword">this</span>)</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定义注解&quot;&gt;&lt;a href=&quot;#定义注解&quot; class=&quot;headerlink&quot; title=&quot;定义注解&quot;&gt;&lt;/a&gt;定义注解&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java进阶" scheme="http://www.freelabor.work/tags/java%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GC World</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.freelabor.work/"/>
  <updated>2020-06-04T15:34:12.090Z</updated>
  <id>http://www.freelabor.work/</id>
  
  <author>
    <name>GC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《斯坦福高效睡眠法》</title>
    <link href="http://www.freelabor.work/2020/06/04/BA0EB41D-FD9B-4045-A9B6-C2F89AFC3B04/"/>
    <id>http://www.freelabor.work/2020/06/04/BA0EB41D-FD9B-4045-A9B6-C2F89AFC3B04/</id>
    <published>2020-06-04T15:24:11.000Z</published>
    <updated>2020-06-04T15:34:12.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h1><p><img src="quiver-image-url/D406C8161543017CB7C859C41340A2BD.jpg =1080x2687" alt="斯坦福高效睡眠-思维导图.jpeg"></p><h1 id="演讲实录"><a href="#演讲实录" class="headerlink" title="演讲实录"></a>演讲实录</h1><p>读完本文约需33分钟 </p><p>各位书友，大家好！今天要为大家讲解的是一本跟我们健康有着非常密切关系的书，叫作《斯坦福高效睡眠法》。</p><p>我以前关于睡眠的认知，是认为睡眠分成非快速眼动睡眠和快速眼动睡眠，然后90分钟一个周期，所以我们要睡够90分钟的整数倍，这叫作整数的睡眠周期，我们就能够睡得很好。但是在读完了这本书之后，我发现它再次地颠覆了我们过去对于睡眠的看法。我个人在读到这些与我过去的认知不一样的新书的时候，我会表现得比较兴奋。</p><p>因为这本书的作者是一位斯坦福大学的教授，而斯坦福大学是全世界第一个建立了睡眠研究中心的大学。因此这本书从我看来，比我之前所获得的关于睡眠的信息来源要更加准确。</p><p>睡眠是一个非常严肃的事，它占据了我们整个人生当中三分之一的时间。很多人过去有一个关于睡眠的误区，认为睡眠其实是休息。那如果是一个勤奋的人，可以减少一点休息，所以把减少睡眠视作是一种光荣的行为，只是压缩了一点休息的时间而已。但其实你要知道，睡眠是我们身体非常重要的一份工作，我们有很多事情只能够在睡眠中去解决的，你醒着的时候你的身体没法完成这些任务，只有睡着了才能够完成这份任务。所以不要简单地把牺牲睡眠时间当作是减少了一点休息而已。</p><p>在这儿顺便要想跟大家沟通关于看待不同观点的问题。我们经常会遇到很多书友和我们说，樊老师，你讲的书里边为什么关于同一件事情有不同的答案？这个世界就是这样，世界上没有一个东西在目前看来是完全准确、确定、不会再变的，科学研究都在不断地更迭、不断地进步。</p><p>所以，对于我们来讲，如果我们有一份成年人的心态，不是像一个小学生一样说，老师你告诉我答案就不要再改了，那我们要不断地读新书，不断地去寻找各种各样不同的答案。我们自己有判断的能力，我们自己需要去抉择、去选择、去判断，我们永远没法找到唯一确定的答案我们才能够去相信它。但是我们的身体可以不断地践行，这我们认识这个复杂世界的一个必然的过程。</p><p>那这本书里边一开始也普及了睡眠有两部分，一部分叫作REM，快速眼动睡眠，还有一部分叫作非REM，即非快速眼动睡眠，这个大概加在一起90分钟。有的人可能长一点，120分钟，有的人短一点，六七十分钟。但是它未必是一个确定准确的，所以有很多人按照这个整数的睡眠周期睡觉，睡醒了以后依然觉得困，还是不舒服。这个原因，是因为你可能跟别人的睡眠周期是不同的。</p><p>最佳的睡眠与睡眠的量是无关的。我们过去以为说，睡得只要足够长，我使劲地睡了大半天，这时候我应该就清醒了。其实不是，有时候睡的时间过长，对我们的身体都没有太大的好处。什么情况下叫作好的睡眠呢？只有大脑、身体和神经都处于最佳状态的时候，我们才能够进入一个良好的睡眠状态，我们才能够彻底地让身心得到放松。</p><p>而且书中还有一个非常有意思的观念，睡眠和清醒是相辅相成的。你要想知道你昨天晚上睡得好不好，其实并不一定非要去考察那个时间段，而要看看你第二天的表现。如果你第一天睡得好的话，你第二天白天的清醒状态是好的。如果你的清醒状态有问题，那么跟你第一天晚上的休息不足是有关的。</p><p>所以这一本书里边给我们大家推荐的最重要的这个方法，叫作黄金90分钟方法。它认为在睡眠的过程当中最重要的时间是睡眠之初的那90分钟。睡眠质量是由初期的90分钟决定的，只要最初90分钟的睡眠质量得到了保证，剩余时间的睡眠质量也会相应变得很好。相反，如果在最初的睡眠阶段就不顺利的话，无论睡多久，自律神经都会失调，而支持白天活动的激素的分泌也会变得紊乱。可以说，即便忙到没有时间，只要能在最初的90分钟里有一个良好的深度睡眠，就能够实现最佳睡眠。</p><p>那么睡好或者睡不好有多么重要，我们把这个重要性先说清楚。</p><p>首先你要小心你的睡眠负债。当一个人长期睡眠不足的情况之下，你就会累积大量的睡眠负债，而睡眠负债跟我们的金钱负债是不一样的，金钱负债你可以再挣点钱，还过去就好，很多睡眠负债你很有可能还不了。</p><p>那如果你累积了大量的睡眠负债，你会有什么样的状况呢？第一个症状，肥胖。现在无论是针对老鼠的实验，还是针对人的这种临床观察，我们都能够发现睡眠质量不好更容易让人肥胖。因为你晚上睡不着觉的时候，有时候你忍不住会吃一些东西，东西吃进去以后，就分泌胰岛素，分泌胰岛素就会阻碍你的脂肪的代谢，所以长期熬夜的人容易变胖。</p><p>然后熬夜容易带来阿尔茨海默症，就是我们说的老年痴呆症。然后熬夜的人会大幅地增加糖尿病的风险，还有高血压，以及其它各种各样精神类的疾病，包括抑郁和焦虑，它们都和熬夜是有关系的。所以，睡一个好觉是非常重要的。</p><p>同时我们要知道，大脑如果得不到良好休息的话，白天你会出现大脑休眠状态。为什么呢？这里边有一个实验：医生找值了夜班以后的医生们来做一个圆形测试。</p><p>屏幕上只要出现一个圆形，你就摁一下按钮，这个在我们正常人来讲，一点问题都没有。你看到圆形，也不是很快，摁一下，这是很简单。但是人们发现那些值了夜班以后的大夫，说你来参与一下，来玩一下，他们经常会漏摁很多这种圆形，就这么简单的一个事情做不到。</p><p>为什么呢？后来对他们的大脑进行监测以后发现，在这些熬过大夜的这些人的头脑里边，会出现1到10秒钟的瞬间睡眠。1秒钟到10秒钟的这个时间瞬间睡着了，他完全不知道，他根本就不知道自己睡着了。但是在那1到10秒钟之内，你想想看，如果你是在做手术，如果你是在发一封非常重要的邮件，更要命的是如果你是在开一辆车，在1到10秒钟的时间里边，这个车能跑出去多远？所以，如果休息不好，这个大脑休眠所带来的影响和危险，是非常大的。这一点大家一定要小心。</p><p>那么全世界各地不同的国家和区域平均睡眠的时间是不一样的。普遍地来讲，城市的睡眠时间要远远短于乡村。</p><p>你比如说像法国，法国的平均睡眠时间是8.7小时每天，但是巴黎就只有6.5小时。美国整个国家平均睡眠时间是7.5小时，而纽约就只有6.35小时。这个书里边提到了东京。东京的平均睡眠时间只有5.59小时，而上海的平均睡眠时间相对还令我们比较欣慰，7.28小时。所以你会发现，你在世界各地去坐那个地铁，你会发现日本东京地铁上睡觉的人特别多，原因是他们的睡眠时间真的很短。日本人下班以后有大量的时间去社交，所以普遍上班族的睡眠不足，这是一个严重的问题。</p><p>同时，基因对我们的睡眠时长也会有影响。不同的人是会有不同的睡眠时间的。所以，如果你们家里边，爸爸妈妈或者爷爷奶奶、兄弟姐妹，大家就睡的时间很短，那你也不用特别地焦虑，你可能也是属于那种能够睡得很短的人。</p><p>你知道在动物当中睡眠时间最短的是谁呢？叫帝企鹅，大家看过《帝企鹅日记》，帝企鹅中的雄性帝企鹅在孵化小企鹅的时候，雌性负责出去找吃的，这个雄性帝企鹅站在那儿可以两个月不睡觉，两个月的时间，站在南极的那个冰天雪地里边不睡觉。这个基因太强大了。</p><p>还有一些人，像拿破仑，人们记载下来说，平均每天就睡3个小时，这就属于是有这种短时睡眠基因的人。所以人和人的睡眠时长是有差别的。</p><p>如果一个人平均睡7个小时，死亡率是最低的。睡眠时间过长或者过短的人比能够睡到7个小时的人死亡率高30%，大概1.3倍，所以最好是能够保证每天有7个小时的睡眠。</p><p>午休不是越长越好，如果你午休的时间超过1个小时，患糖尿病的风险就会增加，这是关于睡眠的一些常识。同时周末用大量的时间补觉是没有用的，而且甚至可能会破坏掉你的生物钟。在周末的时候比平常多睡一两个小时是可以接受的。但是不要拿大量的时间去补觉，这个作用不大。</p><p>我们最重要的是要了解这个黄金90分钟到底是怎么回事。这里边有一张图，我希望大家能够看到这张图（详见视频）。</p><p>在这张图当中，睡眠分成了这么几个周期：在刚开始睡眠的一个半小时里边，叫非REM睡眠。这段时间睡眠的深度是最深的，睡得最沉，所以在一个人刚刚入睡的头90分钟里边，你很难把他叫得醒，因为这个时候睡得是最沉的，他的眼珠是不动的；然后接下来进入REM睡眠，快速眼动睡眠，他的眼球开始动起来，睡眠相对的会浅一点；然后再往后下一个周期又是非REM，然后又变成REM，就大概四五个这样的周期。</p><p>你发现睡眠深度的幅度越来越浅，越来越浅，然后一直到凌晨，大概睡到六七个小时以后，我们进入到最后一轮REM睡眠，快速眼动睡眠的时候，已经变得非常浅了，这就叫作睡到自然醒。如果我们可以一直慢慢地由深入浅地这么睡过去，睡到早上醒过来，这个叫作睡到自然醒，这是非常健康的一觉。</p><p>入睡之后马上迎来的非REM睡眠。在这段时间里边你会发现，人的大脑里边出现大幅度且运动徐缓的波形，表明大脑处于非活跃状态。因此这也被称为徐波睡眠。就是说我们要保证的是人体当中，在我们每天晚上入睡的时候，快速地能够进入到这90分钟的深度睡眠之中。只要能够进入到这个部分，那后边的自然而然就容易出现。</p><p>所以，我们过去老话经常有——你看电视剧里面演的，说他刚睡着，你不要叫他。这是对的，一个人刚睡着觉的时候你叫他，对他来讲是非常破坏睡眠质量的，你至少让他睡够90分钟再叫他。当然午睡除外，这是指晚间的睡眠。</p><p>这个作者讲，要想能够提高睡眠，首先要改变我们对于睡眠的知识，认知。过去很多人喜欢用吃药的方法来调节睡眠。但其实吃药的方法有很多的副作用，而且容易形成药物的依赖。</p><p>实际上，最划算、最有效的方法是我们能够增加对于睡眠的认知。他说现在全世界专业的睡眠研究中心已经有2000多所，从斯坦福开设了睡眠研究中心以后，其他的大学和研究机构也在开睡眠研究中心。</p><p>那过去还有人说睡觉之前不要紧，喝杯酒就好了。作者说你睡眠之前，如果用酒精来让自己入睡，有两个问题。</p><p>第一个，酒精会利尿。利尿导致的结果，是你睡一会儿就被尿憋醒了，你得去上厕所，这个会打扰你的深度睡眠。</p><p>第二个，酒精会使得你的第一轮的90分钟变得更浅，所以他不建议我们用这个喝酒的方法来进入睡眠的状态。</p><p>睡眠有五大使命。</p><p>第一个使命是让大脑和身体得到休息。我们的交感神经在白天忙活了一天了，到了晚上的时候，要让交感神经休息一下，让副交感神经来接手，然后让它来掌管你的呼吸、心跳、律动，然后这时候你才能够有一个良好的身体的休息。</p><p>第二个使命，整理记忆。这一点让人想不到。当我们白天学了那么多的知识以后，晚上在睡觉的时候，这些知识才能够扎根于我们的脑海当中，所以良好的睡眠质量和时长是能够保证我们提高学习效率的。</p><p>第三个使命，调节激素的平衡。我们说的变胖、变瘦、糖尿病、高血压跟这个原因是有关系的。还有一点很重要的给皮肤补水。睡觉的时候能够给皮肤补水，所以很多女孩子会说，我要睡一个美容觉，这是有道理的，睡觉是能够给自己的皮肤补水的。</p><p>第四个使命，提高免疫力，远离疾病。我们的免疫系统需要通过睡眠来进行修复和调节，你不能让整个身体天天都处在亢奋当中，那样你的免疫系统会紊乱。</p><p>第五个使命，排出大脑中的废弃物。大家知道我们大脑当中浸润着脑脊液，然后你大脑白天会产生很多的这种没用的垃圾，它就会通过脑脊液在晚间大量地排出。</p><p>所以，如果一个人晚上长期缺乏睡眠，你会发现，有的人连续熬了两三个夜以后，他整个人是懵的，他大脑的整个状态是不对的，因为他的大脑当中留下了大量的毒素、垃圾和废物。</p><p>所以，你不睡觉，这些东西排不出去。</p><p>我们讲过《终结阿尔茨海默病》那本书，里边就讲到要想减少阿尔茨海默病的发病，我们就需要保持良好的睡眠，这是我们说关于睡眠的使命。</p><p>过去我们有一个认知是说，人只有在快速眼动的时候，也就是在相对浅一点的睡眠周期里边，我们才会做梦。其实这往往是因为我们在醒过来的时候能够记得的，都是刚刚那一会儿做的那个梦。</p><p>实际上，这些研究者进行了深入的研究以后发现，人们不光是在REM阶段会做梦，人们在非REM的时候也会做梦。动物也会做梦。你看到那个小狗在睡觉的时候，它的尾巴突然摇得很厉害，它一定是梦见了白天的很多画面，或者有很多新的拼凑的故事在这儿。所以这个作者说，做梦越多越好，你晚上做七八个梦，这是很正常的，而且做梦多是一件好事。但是他没有给出深入的论证，所以我并不知道为什么做梦多是一件好事。</p><p>睡眠质量的评估，大概有70%的人是对自己的睡眠质量不满意的，只有30%的人觉得睡眠得很好。但实际上，当我们给这些70%抱怨自己睡眠的人戴上了那个睡眠监测的仪器以后，你会发现，其实他们已经睡着了。我们有时候躺在床上，觉得今天真是睡得不好，翻来覆去睡不着觉，我们觉得自己一直没有睡着觉，那个过程当中通过机器来监测，很多人是睡着了的。</p><p>所以，我们的睡眠质量并没有我们想得那么糟糕，核心是要看你第二天白天的表现，就是你白天的表现，只要精力足够旺盛，大脑足够活跃，你没有一个劲儿地打瞌睡，那就证明你头一天晚上休息是很不错的。</p><p>最危险的一个状况叫作睡眠呼吸暂停综合症。人每天晚上会打呼噜，然后呼吸会骤停。</p><p>如果我们在每小时当中有5次，每次不超过10秒钟，这是正常的，没关系。但是有人每小时里边可能会多达几十次，这是严重的呼吸骤停疾病。所以，如果出现了这种严重的疾病，作者讲，很严肃的，你一定要赶紧去医院看。</p><p>如果是睡眠呼吸综合症有哪些表现？白天总想要睡觉，然后引发肥胖、高血压、糖尿病等生活习惯类疾病，导致血液粘稠，容易发心梗、脑梗，无法休息，然后自律神经、激素、免疫等系统无法正常工作，重症情况下如果放任不管，40%的人8年内会死亡。这是相当严肃的一个话题。</p><p>睡眠呼吸综合症可以通过带护齿套、扩张呼吸道或者安装CPAP呼吸机等方法来进行预防性治疗。一般来说，病情都能够简单地获得改善。对此有担心的人请务必去接受相关的治疗。</p><p>作者说，如果你没有到要到医院去看的那个状况，你可以通过自己的呼吸练习来进行一些调节。</p><p>明明睡了觉，却依然犯困的人，最好在起床时有意识地用鼻子吸气呼气，白天也要有意识地练习，用鼻子呼气吸气的腹式呼吸。我们吸进去气以后，我们的腹部是鼓起来的，然后呼出气的时候，我们的腹部是收缩回去的。这个大家可以练习，会唱歌的人基本上都会练这个。</p><p>我们当年在做辩论赛的训练的时候学会了这一招，就一直受益终生，就是腹式呼吸法。在此基础上，每天睡前通过深呼吸让交感神经趋于平静，同时让副交感神经占据主导位置。当习惯了这种腹式呼吸后，睡眠过程中就不会再出现用嘴呼吸的状况，进而也就解决了打呼噜的问题。</p><p>大家知道我们曾经谈到过，呼吸是人体当中唯一的一个既能够用交感神经控制，也能够用副交感神经控制的东西。</p><p>你比如说心跳，你想用你的交感神经来控制，你说不要跳，那做不到。但是呼吸这件事情，你刻意地呼吸是可以的，然后你忘记了这件事，它照样在呼吸，它是交感神经跟副交感神经的一个连线。因此在晚上睡觉，交感神经和副交感神经交接班的时候，通过深呼吸可以让它们快速地完成这个交接班。这是我们说关于睡觉的一些基本的知识。</p><p>还有一点，我觉得东方人是特别容易接纳的。我们曾经讲过，睡觉几点钟睡其实关系不大，重要的是只要你睡够90分钟的整数倍就行了。但是这个作者讲人是有生物节律的，你最好是11点左右上床睡觉，不要拖过11点，10点多钟开始洗漱，然后11点钟上床睡觉。先睡这90分钟是很重要的。</p><p>那有人说，我任务特别重，我要赶一个文件，今天晚上必须把那个东西做出来，怎么办呢？先睡90分钟，睡了90分钟以后起来再干活都好过你一直熬过了这11点。我个人有一个体会，有时候晚上1点钟睡觉，然后早上9点钟起床，依然你睡够了8个小时，但是困得要命，浑身上下都没有劲。但是假如那天晚上是10点半或者11点钟就像正常一样入睡了，那么早上7点钟起来你会觉得神清气爽，这是个人经验。</p><p>那么，怎么能够保证我们在入睡的前90分钟，快速地进入睡眠呢？这也是这本书里边最有价值的部分。我们说，人体能不能够快速地进入睡眠状态，其实这两个开关是非常重要的。你知道一个睡眠质量好的人，7到8分钟睡着，而那些大量的抱怨自己睡眠质量不好但其实是健康的人，也就10分钟。你说你辗转反侧睡不着觉，其实可能你入睡的时长也比那个七八分钟的人长了一点点。那当然，真正有睡眠障碍的人除外，他是确实睡不着，一直睁着眼睛，这是睡不着。但是基本上健康的人，就是7到8分钟和10分钟之间的差异。</p><p>那怎么能够让我们快速地进入到这90分钟的深度睡眠当中呢？这两个开关，一个叫作体温，一个叫作大脑。</p><p>体温对于我们睡觉是如此重要的一件事。大家有没有看过那种在雪山上的片子。爬雪山的时候出了事故，然后那个人快不行了的时候，他就会说，好困，好困啊。一个人快要死亡的时候，经常会表现出来的是说好困。为什么呢？因为在人睡觉的时候，他的体温会下降。我们白天的时候体温是高的，体内温度基本上会比我们的体表温度高2度，然后在入睡以前这个温差会缩小。我们的体表温度要通过手上的出汗，脚底的出汗，手脚发热来让我们的体内的温度散放出来。所以，体内的温度散放出来以后，体表温度和体内温度的这个差距就缩小了。</p><p>在睡觉的时候，能够让我们入睡的这个温度开关，是让体内的温度下降，让体表的温度上升。所以，大家就理解，在雪山上那个冻得很厉害的时候，旁边有个人就一定叫，不要睡着，不要睡着，一旦他睡着进去，就有可能会带来进一步的低温症，然后最后这个人可能就叫不醒。还有一个状况，我们在非常冷的那个会议室里边开会的时候，尤其是你如果头一天没睡好，大家经常会觉得说把空调开低一点让大家清醒清醒。不对。空调开低一点这里边的人更容易睡着，因为他体内的温度下降了，体内的温度一下降，过一会儿就睡着了。所以在我们睡觉之前，要打开我们的这个温度的开关。</p><p>这里边有三个方法。</p><p>第一个方法叫作入睡前90分钟沐浴。我们在入睡前提前90分钟，比如说你打算12点钟睡觉，那么你大概10点钟你就准备去洗澡。</p><p>入睡前90分钟沐浴的好处是什么呢？用大概40度左右的热水冲洗了这个身体以后，你的温度会上升，但你要知道人是恒温动物，所以人体内的温度上升以后，只要你停止了洗澡它就会下降，这个温度下降的过程会给你带来睡意。所以我们说为什么泡完了澡以后特别困，就是这个道理。泡完了澡以后你体内的温度上升了，然后等你一出来温度快速地下降，这个下降的过程会让你产生睡意。</p><p>第二个方法，如果你没有条件泡澡的话，足浴。这个作者说足浴有着惊人的效果，因为足浴可以提高我们手脚的散热能力，人体表温度的散热主要靠手和脚，所以把脚泡在热水里边，脚上的这个毛细血管打开，然后拿出来以后它快速地散热，你的体内温度会下降。</p><p>有的女生经常会说手冷脚冷，说穿袜子睡觉有没有好处？穿袜子睡觉并没有好处。但是你可以在睡觉之前，先穿着袜子，准备睡觉的时候把袜子脱掉，这时候对睡眠是有好处的。你穿袜子的时候把你的脚捂热了，让你的脚要往出散发热量的时候，你把这个袜子一脱掉，你的手脚开始散发体内的热量，这时候有助于你睡觉，但如果你一直穿着袜子睡觉，不利于睡眠质量，因为你的手脚散热被挡住了。</p><p>第三个方法，舒适的室温。多少度算舒适的室温呢？人跟人不一样，所以这个作者没有说多少度算是舒适的室温。但是总之，你躺在那儿不要一个劲儿地出汗，也不要冷得打哆嗦，你就找到一个合适的、舒适的温度，让你的体内的温度能够自然地下降，然后手脚是保持温热的，这时候体表的温度上升了一点，体内的温度下降了一点，你的困意就逐渐地出现。</p><p>还有一个方法是给头部散热，头部散热不是说在脑袋上贴一个降温贴，而是要睡那种透气性好的枕头，这个也是有助于我们睡觉的开关。洗澡、浴足、调节室内的温度、让头部散热，这些东西就能够使得我们打开第一个开关，叫作体温开关。</p><p>第二个开关，大脑开关。大脑开关怎么样开启睡眠呢？最核心的一点，减少兴奋。睡觉之前，如果你做一些让自己特别兴奋的事，你就很难睡觉。好多人说睡觉前打一局游戏吧，这一局游戏打完睡不着了，或者是睡觉前看一个电影，千万不要看那些刺激的、惊险的，这些东西都会使得你过度地兴奋。</p><p>第一个，打开大脑开关最有效的方法是单调法则。你看的东西越单调越好。你如果说不要看，用听的，别听相声，听相声时候让你笑，听评书让你激动。这个作者讲了，说你听单口相声好过听群口相声，因为单口相声就一个人的声音一直说，很容易催眠。我每天晚上讲书，好多书友跟我反馈，说樊老师我听你那个，我不是说你讲得不好，我就觉得怎么一听就睡着呢？原因今天找着了，我的声音频率是一个人，很稳定，所以从频率的角度来讲很单调，这种单调的声音是特别容易让你入睡的。所以，睡觉前单调法则很重要。</p><p>第二个，正确地数羊。这个数羊这招是外国人传来的，一只羊，两只羊，三只羊。我们中国人数羊经常睡不着，原因是什么呢？外国人数羊能睡着，是因为羊的发音是sheep，one sheep，two sheep，three sheep，“sheep”和“sleep（睡觉）”是非常像的词，所以当他在念羊这个词的时候，实际上是在暗示自己，睡觉，睡觉，睡觉。</p><p>所以，我们就别跟人家一块儿数羊了，我们改一改。我想了一招，中文发音最好的，你去想象有个钟乳石，然后有一滴水啪嗒，啪嗒滴下来，一滴水，两滴水，三滴水，四滴水，我们用水，因为“水”和“睡”在中文的发音里边是非常接近的。所以你就想象滴水的那个样子，滴答，滴答，滴答，数着数着，应该不到7到8分钟，就应该能睡着了，这是正确的数羊的方法。</p><p>还有一个要注意，睡前两小时有一个叫睡眠禁区，什么叫睡眠禁区？你比如说，明天早上5点钟你要赶飞机，那怎么办呢？今天晚上早点睡往往睡不着，原因是如果你平常习惯了11点或者12点睡觉，那么往前倒两个小时，也就是说10点或者9点的时候，正是你最兴奋的时候，这个叫作睡眠禁区。所以这个时候你可以收拾东西，可以做一些不用动脑子的事，然后看一些比较无聊的书，去冲个热水澡，然后到点睡觉。</p><p>他说，一个人最多能够往前提一个小时睡觉，所以往前提特别困难，这里边有一句话叫作“往后挪动易，往前挪动难”。</p><p>你说，我平常11点睡觉，今天熬一下夜熬到1点钟，这个对每个人来讲都不难。但是你说，平常11点睡觉，今天9点钟睡觉，这个很难，所以与其做那样去触碰睡眠禁区的事，还不如你就大概提前上半个小时上床，就差不多了。然后把头90分钟只要睡好了，第二天早上起来赶飞机什么的，问题也不大。</p><p>还有一个，要注意蓝光。大家知道手机屏幕发出的就叫蓝光，这个蓝光的频率是特别容易让人清醒，特别容易让人兴奋的。</p><p>所以，你发现没，你看书的时候容易睡着，但是你拿着手机看的时候就不容易睡着，因为蓝光容易让你兴奋。在美国，他们打橄榄球比赛，然后夜间不是有很多比赛么，那种比赛当中，在现场的灯光里边都加入了蓝光，因为蓝光会让所有的人清醒。尤其是运动员，他会在晚间打球保持清醒。</p><p>所以，在晚上睡觉的时候，我们希望室内的灯光，最好是暗的，然后有一些温暖的这个小射灯，小小的，不要影响你睡觉，最好没有，那黑暗当中可能是最好的，要小心蓝光的问题。</p><p>那这样的话，我们就可以打开我们睡觉的两个大的开关，一个是体温开关，一个是减少兴奋的大脑开关，你就更加容易进入睡眠的状态。</p><p>现在甚至有一种生意，你看刚才讲了，70%的人都觉得自己有睡眠障碍，那这些有睡眠障碍的人就要去求助专业人士给他建议，给他工具，给他很多的设备，让他能够安然地入睡，能够解决这个问题。我觉得这是一个非常好的市场。</p><p>那这本书没有在这儿就停下来，你看，我们学会了怎么睡觉，但是并不完备。这个作者说，睡觉和清醒这两件事本来一体两面，如果你不能够在白天的时候，保持一个良好的状态，很清醒地去做工作，你晚上也睡不好，反过来你晚上睡不好，白天你也很难清醒。所以你要解决睡眠的问题，你还需要有另外一个非常重要的抓手，打造日间的清醒体系。</p><p>在这里边有两个大的开关。一个是光线，每天早上醒来以后，首先把窗帘“唰”拉开。当那个阳光，照在自己身上的那一刻，你非常容易进入清醒的状态。</p><p>为什么呢？晒太阳会抑制我们体内的褪黑素。我们曾经讲过《压力管理》那本书，说我们的体内有血清素，血清素在白天是晒太阳的时候产生的，产生这么多的血清素以后，你有了足够多的血清素，晚上它才会变成褪黑素，才能让你睡觉。</p><p>还有一个也是体温的问题。那么结合这两个开关，这个作者给了九个方法，九个让我们白天保持清醒的方法。</p><p>第一个方法，早上起床的时候，设定两个闹钟。这个我相信很多人都试过。但是设定两个闹钟有讲究，第一个闹钟比第二个闹钟，大概提前20分钟。假如你7点钟要起床，你6点40设一个闹钟，然后6点40的这个闹钟要声音小一点，时间短一点，因为你其实并不想在6点40醒来，所以这个时间的一个闹钟声音小又短。</p><p>它的目的是什么呢？让你进入到浅睡眠，把你从深度睡眠当中唤醒，摇晃一下，让你进入到浅睡眠，这样你起来就不会难受，你也不用管它。</p><p>然后到7点钟的时候，那个正经的闹钟响起来“嗡嗡嗡”一响，这时候他说大部分的人基本上就会起来。当然如果你有高血压，有心脏病，不要一下子就起来，慢慢地起来，起来再坐一会儿然后再起床，正常人就能够起床了。对于喜欢睡懒觉的人来讲，设两个闹钟能够提高1.5倍的起床概率。</p><p>第二个方法，晒太阳，然后抑制褪黑素，把窗帘打开。</p><p>第三个方法，光脚接触地面。我们都是穿拖鞋在家里边。但是如果你早上起来，你的家卧室地板是干净的话，你就光着脚站在地板上。</p><p>为什么呢？他说光脚的时候，能够让我们的上行性网状结构兴奋，我们白天在做事的时候，我们的上行性网状结构在大脑当中都是兴奋的，而你把脚放在地面上，你的皮肤直接接触地面，既有利于你的皮肤散热，也有利于你的上行性的系统兴奋。因为睡觉醒来的时候，温度就刚好是相反的，如果你睡觉的时候是希望你的体内温度下降，然后体表温度上升，那么醒来的时候正好相反，让我们的体内温度上升，让我们的体表温度下降，你就更容易醒过来，所以这是第三招，光脚站在地板上。</p><p>第四个方法，用冷水洗手洗脸。最好不要在早上泡澡，因为在早上泡澡以后很容易犯困，就正好走到了晚上的那个习惯当中去了，</p><p>第五个方法，吃一些需要不断咀嚼的食物，别吃那些太软的。你嚼的劲越大，你醒得越快。所以，你准备一些比较有嚼劲的早餐，然后让自己一边吃着早餐，嚼着嚼着就醒过来了。</p><p>第六个方法，避免汗流浃背。好多人喜欢早上起来运动一下。当然简单地运动运动，做一些起床操什么的，这都没问题，能够让你体内的温度上升。但是，如果你早上起来，来了一通大的运动，跑得满头满身都是汗，情况就相反了。这个时候，你的体内温度升高得过快，会导致什么呢？我们前面讲过了，我们是恒温动物，所以升高得过快，它就会下降，过一会开着车到了单位，体内温度开始下降就困了，所以早上起来不要做过度的运动。</p><p>第七个方法，可以喝一些咖啡。一个成年人每天安全的咖啡因是400毫克，而且如果你不太耐受的话，你到了晚上傍晚时分下午六七点钟，就不要再喝咖啡，不要再喝绿茶了。因为你很可能会睡不着觉。但是白天的时候，来上一两杯是没问题的。</p><p>第八个方法，改变你的工作安排。应该怎么做呢？你头脑最清醒的时候是早上刚到办公室那个时候。这个作者是每天早上6点钟开始办公，哇，我觉得这个效率一定很高。办公室9点才来人，他6点钟开始，所以他把所有重要的事情都放在早间去处理。</p><p>然后到了下午开会不要安排特别艰难的会议，下午安排一些简单的、事务性的、流程性的，把比较需要动脑子的、需要使劲的会议放在上午来开。到了下午，晚上的时候，他说能不动脑就不要动脑了。</p><p>他甚至说到，有很多老人家到了下午去结账都要用信用卡结账，不要用钱。</p><p>为什么？用钱费脑子，用信用卡结账不用费脑子。别小看这一点，老年人到了晚年，要想保持自己的大脑活跃有一个方法，你经常用零钱付费。你经常花钱的时候你用零钱付，这是对大脑很强有效的锻炼，因为你要不断地算。所以，到了晚上，准备去进入晚间的时候，减少这个大脑的兴奋程度，这是第八招。</p><p>第九个方法，要吃晚饭，不要空腹。因为空腹睡觉很容易让你晚上睡不着。空腹睡觉还容易改变你体内激素的分泌，甚至有人忍不住再去吃一点，然后分泌很多的胰岛素，就导致你胰岛素分泌紊乱。所以，晚上最好是正常吃饭。</p><p>作者建议晚上吃饭的时候，吃一点冰镇西红柿。因为日本餐里边的那种冰镇西红柿，红红的挺好看，能够让你体内温度下降，而且很爽口。冰镇黄瓜也可以，吃一点冰镇的食品。</p><p>这是我们说关于白天能够让我们变得清醒的九个方法，其实核心是控制好光线，控制好我们体内的体温。</p><p>很多人会遇到白天睡魔的问题。我见过很多很多很年轻的人，白天工作的时候就打瞌睡，领导在上面讲话就睡觉，这是很尴尬的一件事，而且也不利于我们的身心健康，不利于我们职场的发展。</p><p>所以，这个作者专门给这些人出了一些主意。他说，如果你中午吃完饭以后容易睡觉，他的建议是午餐少吃一点，尤其是要少吃淀粉类的食物，因为吃淀粉类的食物会使得你容易犯困，这是第一个建议。</p><p>第二个是开会别老往后躲，开会要多参与，要坐在老板能看得见的地方，经常发言。因为他在美国和日本两个国家来回跑，他说日本人开会打瞌睡特别多，因为日本人本来睡眠就不足。但是美国人很少打瞌睡，他就不明白，美国人怎么开会打瞌睡这么少呢？后来他就观察，发现美国人有一招很管用，嘴里边嚼口香糖，他嘴里边一直嚼着东西，嚼东西的时候不容易睡着，所以如果你真的有那个嗜睡的状况，嚼一点东西也是有好处。</p><p>关于午休是一个非常重要的话题。午休最好不要超过30分钟。我们中午在办公室有个行军床或者有个小沙发躺一下，睡一下是非常好的，睡比不睡强。但是睡超过30分钟就没那么好了。</p><p>这里边有一个数字是说，患阿尔茨海默症的风险的。他说，如果一个人午睡30分钟之内，他患阿尔茨海默症的风险是不睡午觉的人的七分之一，你看他会健康得多。但是如果一个人睡到30到60分钟，他午睡的时间超过半个小时，快到一个小时了，那么他只是不睡午觉人的风险的二分之一，也就是说睡30到60分钟，就没那么好了，更危险的是睡超过60分钟。</p><p>所以这一点要提醒我们那些特别喜欢睡午觉的中老年朋友。有很多中老年朋友，一睡就睡好长时间，大半个下午就睡没了，觉得人生就应该这样。但其实这样的做法很有可能会让我们的身体变得更加糟糕，会让我们大脑受损，然后停下来，最后很有可能会有阿尔茨海默症的影响和风险。所以我们建议大家午睡不要超过30分钟。</p><p>在最后，作者说，如果你能够有效地改变你人生当中这三分之一的时间，相信你也可以改变另外的三分之二的时间。因为这个世界上有很多事，只有在睡着了才能做，把睡觉当作我们生活当中非常重要，必须得去认真对待的一件事情，我们才能够让自己的人生过得更加美好。</p><p>所以，希望大家能够借助这本书，养成更好的作息习惯，让身体变得更加健康。我们在追求知识，科学的生活方式的道路上，不断地在探索，希望大家能够拥抱新知，谢谢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;思维导图&quot;&gt;&lt;a href=&quot;#思维导图&quot; class=&quot;headerlink&quot; title=&quot;思维导图&quot;&gt;&lt;/a&gt;思维导图&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;quiver-image-url/D406C8161543017CB7C859C41340A2BD.jp
      
    
    </summary>
    
    
      <category term="睡眠" scheme="http://www.freelabor.work/tags/%E7%9D%A1%E7%9C%A0/"/>
    
      <category term="FD" scheme="http://www.freelabor.work/tags/FD/"/>
    
  </entry>
  
  <entry>
    <title>Flutter 如何加载WebView</title>
    <link href="http://www.freelabor.work/2020/06/04/1C88C188-9803-4EC1-9DDE-C2304205DCEF/"/>
    <id>http://www.freelabor.work/2020/06/04/1C88C188-9803-4EC1-9DDE-C2304205DCEF/</id>
    <published>2020-06-04T07:06:31.000Z</published>
    <updated>2020-06-04T15:34:12.060Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>初始化：<code>FlutterWebviewPlugin</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FlutterWebviewPlugin flutterWebviewPlugin</span><br><span class="line">flutterWebviewPlugin = FlutterWebviewPlugin();</span><br></pre></td></tr></table></figure></li><li><p>监听状态：<code>flutterWebViewPlugin.onStateChanged.listen</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">flutterWebviewPlugin.onStateChanged.listen((state) &#123;</span><br><span class="line">      <span class="keyword">if</span> (state.type == WebViewState.finishLoad) &#123;</span><br><span class="line">        <span class="comment">//    加载完成</span></span><br><span class="line">        setState(() &#123;</span><br><span class="line">          isLoading = <span class="keyword">false</span>;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">"finish <span class="subst">$isLoading</span>"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state.type == WebViewState.startLoad) &#123;</span><br><span class="line">        setState(() &#123;</span><br><span class="line">          isLoading = <span class="keyword">true</span>;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">"startLoad <span class="subst">$isLoading</span>"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li><li><p>页面结束是回收<code>flutterWebViewPlugin</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> dispose() &#123;</span><br><span class="line">  flutterWebviewPlugin.dispose();</span><br><span class="line">  <span class="keyword">super</span>.dispose();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>WebView控件</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///WebView插件</span></span><br><span class="line"><span class="keyword">return</span> WebviewScaffold(</span><br><span class="line">appBar: AppBar(</span><br><span class="line">  title: Text(widget.data[<span class="string">'title'</span>]),</span><br><span class="line">  <span class="comment">///appbar下边摆放一个进度条</span></span><br><span class="line">  bottom: PreferredSize(</span><br><span class="line">      preferredSize: <span class="keyword">const</span> Size.fromHeight(<span class="number">1.0</span>),</span><br><span class="line">      child: <span class="keyword">const</span> LinearProgressIndicator()),</span><br><span class="line">  <span class="comment">///透明度</span></span><br><span class="line">  bottomOpacity: isLoading ? <span class="number">1.0</span> : <span class="number">0.0</span>,</span><br><span class="line">),</span><br><span class="line">withLocalStorage: <span class="keyword">true</span>, <span class="comment">//缓存，数据存储</span></span><br><span class="line">url: widget.data[<span class="string">'url'</span>],</span><br><span class="line">withJavascript: <span class="keyword">true</span>);</span><br></pre></td></tr></table></figure></li><li><p>问题，如果页面不能展示，出现flutterWebViewPlugin找不到<br>就写在APP，重新安装</p></li><li><p>完整代码</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter_webview_plugin/flutter_webview_plugin.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebViewPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> data;</span><br><span class="line"></span><br><span class="line">  WebViewPage(<span class="keyword">this</span>.data);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  State&lt;StatefulWidget&gt; createState() &#123;</span><br><span class="line">    <span class="keyword">return</span> WebViewPageState();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebViewPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">WebViewPage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="built_in">bool</span> isLoading = <span class="keyword">true</span>;</span><br><span class="line">  FlutterWebviewPlugin flutterWebviewPlugin;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    flutterWebviewPlugin = FlutterWebviewPlugin();</span><br><span class="line">    flutterWebviewPlugin.onStateChanged.listen((state) &#123;</span><br><span class="line">      <span class="keyword">if</span> (state.type == WebViewState.finishLoad) &#123;</span><br><span class="line">        <span class="comment">//    加载完成</span></span><br><span class="line">        setState(() &#123;</span><br><span class="line">          isLoading = <span class="keyword">false</span>;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">"finish <span class="subst">$isLoading</span>"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state.type == WebViewState.startLoad) &#123;</span><br><span class="line">        setState(() &#123;</span><br><span class="line">          isLoading = <span class="keyword">true</span>;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">"startLoad <span class="subst">$isLoading</span>"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    flutterWebviewPlugin.dispose();</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    return Text(widget.data['url']);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">///WebView插件</span></span><br><span class="line">    <span class="keyword">return</span> WebviewScaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(widget.data[<span class="string">'title'</span>]),</span><br><span class="line">          <span class="comment">///appbar下边摆放一个进度条</span></span><br><span class="line">          bottom: PreferredSize(</span><br><span class="line">              preferredSize: <span class="keyword">const</span> Size.fromHeight(<span class="number">1.0</span>),</span><br><span class="line">              child: <span class="keyword">const</span> LinearProgressIndicator()),</span><br><span class="line">          <span class="comment">///透明度</span></span><br><span class="line">          bottomOpacity: isLoading ? <span class="number">1.0</span> : <span class="number">0.0</span>,</span><br><span class="line">        ),</span><br><span class="line">        withLocalStorage: <span class="keyword">true</span>, <span class="comment">//缓存，数据存储</span></span><br><span class="line">        url: widget.data[<span class="string">'url'</span>],</span><br><span class="line">        withJavascript: <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;初始化：&lt;code&gt;FlutterWebviewPlugin&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2.4 Flutter-路由-注意事项</title>
    <link href="http://www.freelabor.work/2020/06/03/410EFDCD-47D7-47C7-BB88-EECF5F6BFF81/"/>
    <id>http://www.freelabor.work/2020/06/03/410EFDCD-47D7-47C7-BB88-EECF5F6BFF81/</id>
    <published>2020-06-03T08:06:24.000Z</published>
    <updated>2020-06-04T15:34:12.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="出现问题的情况"><a href="#出现问题的情况" class="headerlink" title="出现问题的情况"></a>出现问题的情况</h1><p>如果直接在第一个Widget内进行跳转，就会出现问题：<code>Navigator operation requested with a context that does not include a Navigator.</code><br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:io'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/foundation.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 路由注意事项</span></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  FlutterError.onError = (FlutterErrorDetails details) &#123;</span><br><span class="line">    FlutterError.dumpErrorToConsole(details);</span><br><span class="line">    <span class="keyword">if</span> (kReleaseMode) exit(<span class="number">1</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// [StatelessWidget]</span></span><br><span class="line">  runApp(RouteApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Flutter navigator attention problem occurs"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(<span class="string">"主页：有问题的"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"第一行"</span>),</span><br><span class="line">            RaisedButton(</span><br><span class="line">              onPressed: () &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 报错</span></span><br><span class="line"><span class="comment">                    ════════ Exception caught by gesture ═══════════════════════════════════════════════════════════════</span></span><br><span class="line"><span class="comment">                    The following assertion was thrown while handling a gesture:</span></span><br><span class="line"><span class="comment">                    Navigator operation requested with a context that does not include a Navigator.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    The context used to push or pop routes from the Navigator must be that of a widget that is a descendant of a Navigator widget.</span></span><br><span class="line"><span class="comment">                    When the exception was thrown, this was the stack:</span></span><br><span class="line"><span class="comment">                    #0      Navigator.of.&lt;anonymous closure&gt; (package:flutter/src/widgets/navigator.dart:1495:9)</span></span><br><span class="line"><span class="comment">                    #1      Navigator.of (package:flutter/src/widgets/navigator.dart:1502:6)</span></span><br><span class="line"><span class="comment">                    #2      RouteApp.build.&lt;anonymous closure&gt; (package:flutterapp/navigator/navigator_attention.dart:31:27)</span></span><br><span class="line"><span class="comment">                    #3      _InkResponseState._handleTap (package:flutter/src/material/ink_well.dart:705:14)</span></span><br><span class="line"><span class="comment">                    #4      _InkResponseState.build.&lt;anonymous closure&gt; (package:flutter/src/material/ink_well.dart:788:36)</span></span><br><span class="line"><span class="comment">                    ...</span></span><br><span class="line"><span class="comment">                    Handler: "onTap"</span></span><br><span class="line"><span class="comment">                    Recognizer: TapGestureRecognizer#4fb4f</span></span><br><span class="line"><span class="comment">                    debugOwner: GestureDetector</span></span><br><span class="line"><span class="comment">                    state: possible</span></span><br><span class="line"><span class="comment">                    won arena</span></span><br><span class="line"><span class="comment">                    finalPosition: Offset(78.2, 125.8)</span></span><br><span class="line"><span class="comment">                    finalLocalPosition: Offset(78.2, 19.8)</span></span><br><span class="line"><span class="comment">                    button: 1</span></span><br><span class="line"><span class="comment">                    sent tap down</span></span><br><span class="line"><span class="comment">                    ════════════════════════════════════════════════════════════════════════════════════════════════════</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                Navigator.of(context).push(MaterialPageRoute(builder: (_) &#123;</span><br><span class="line">                  <span class="keyword">return</span> RouteSecondPage0();</span><br><span class="line">                &#125;));</span><br><span class="line"></span><br><span class="line">              <span class="comment">/// 即使传进rootNavigator为true也不行</span></span><br><span class="line"><span class="comment">//                Navigator.of(context, rootNavigator: true)</span></span><br><span class="line"><span class="comment">//                    .push(MaterialPageRoute(builder: (_) &#123;</span></span><br><span class="line"><span class="comment">//                  return RouteSecondPage0();</span></span><br><span class="line"><span class="comment">//                &#125;));</span></span><br><span class="line">              &#125;,</span><br><span class="line">              child: Text(<span class="string">"想要跳转第二页"</span>),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteSecondPage0</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Text(<span class="string">"22222"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="解决方案一：添加一层Builder进行封装"><a href="#解决方案一：添加一层Builder进行封装" class="headerlink" title="解决方案一：添加一层Builder进行封装"></a>解决方案一：添加一层Builder进行封装</h1><p>通过Builder来创建RaisedButton<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Flutter navigator attention problem occurs"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(<span class="string">"主页：有问题的—&gt; 方案一：Builder"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"第一行"</span>),</span><br><span class="line"></span><br><span class="line">            <span class="comment">/// 添加Builder封装</span></span><br><span class="line">            Builder(builder: (context) &#123;</span><br><span class="line">              <span class="keyword">return</span> RaisedButton(</span><br><span class="line">                onPressed: () &#123;</span><br><span class="line">                  Navigator.of(context).push(MaterialPageRoute(builder: (_) &#123;</span><br><span class="line">                    <span class="keyword">return</span> RouteSecondPage0();</span><br><span class="line">                  &#125;));</span><br><span class="line">                &#125;,</span><br><span class="line">                child: Text(<span class="string">"想要跳转第二页"</span>),</span><br><span class="line">              );</span><br><span class="line">            &#125;),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="解决方案二：将第一个内容页面再次抽取"><a href="#解决方案二：将第一个内容页面再次抽取" class="headerlink" title="解决方案二：将第一个内容页面再次抽取"></a>解决方案二：将第一个内容页面再次抽取</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Flutter Navigator Attention"</span>,</span><br><span class="line">      home: RouteMainPage(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteMainPage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"第一页:独立的RouteMainPage"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"主页第一行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line"><span class="comment">//              Navigator.of(context).push(MaterialPageRoute(builder: (_) &#123;</span></span><br><span class="line"><span class="comment">//                return RouteSecondPage0();</span></span><br><span class="line"><span class="comment">//              &#125;));</span></span><br><span class="line">              Navigator.push(context, MaterialPageRoute(builder: (_) &#123;</span><br><span class="line">                <span class="keyword">return</span> RouteSecondPage();</span><br><span class="line">              &#125;));</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"跳转到第二页"</span>),</span><br><span class="line">          )</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解决方案三："><a href="#解决方案三：" class="headerlink" title="解决方案三："></a>解决方案三：</h1><p>使用GlobalKey<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RouteApp1</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> GlobalKey&lt;NavigatorState&gt; navigatorKey = GlobalKey();</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      <span class="comment">/// 指定路由器widget的key</span></span><br><span class="line">      navigatorKey: navigatorKey,</span><br><span class="line">      title: <span class="string">"Flutter Navigator Attention"</span>,</span><br><span class="line">      home: Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(<span class="string">"主页：解决方案三"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Column(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Text(<span class="string">"主页第一行"</span>),</span><br><span class="line">            RaisedButton(</span><br><span class="line">              onPressed: () &#123;</span><br><span class="line">                <span class="comment">//    使用navigatorKey来跳转</span></span><br><span class="line">                navigatorKey.currentState.push(MaterialPageRoute(builder: (_) &#123;</span><br><span class="line">                  <span class="keyword">return</span> RouteSecondPage();</span><br><span class="line">                &#125;));</span><br><span class="line">              &#125;,</span><br><span class="line">              child: Text(<span class="string">"跳转第二页"</span>),</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;出现问题的情况&quot;&gt;&lt;a href=&quot;#出现问题的情况&quot; class=&quot;headerlink&quot; title=&quot;出现问题的情况&quot;&gt;&lt;/a&gt;出现问题的情况&lt;/h1&gt;&lt;p&gt;如果直接在第一个Widget内进行跳转，就会出现问题：&lt;code&gt;Navigator operati
      
    
    </summary>
    
    
      <category term="flutter" scheme="http://www.freelabor.work/tags/flutter/"/>
    
      <category term="flutter-路由" scheme="http://www.freelabor.work/tags/flutter-%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>2.3 自定义路由切换动画</title>
    <link href="http://www.freelabor.work/2020/06/03/CDE851D8-1C0F-4777-8091-165FA1600362/"/>
    <id>http://www.freelabor.work/2020/06/03/CDE851D8-1C0F-4777-8091-165FA1600362/</id>
    <published>2020-06-03T06:22:52.000Z</published>
    <updated>2020-06-04T15:34:12.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用PageRouteBuilder自定义动画"><a href="#使用PageRouteBuilder自定义动画" class="headerlink" title="使用PageRouteBuilder自定义动画"></a>使用PageRouteBuilder自定义动画</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomMainRoute</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"主页—&gt; 自定义路由动画"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"主页第一行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line"><span class="comment">//              Navigator.push(context, MaterialPageRoute(builder: (context) &#123;</span></span><br><span class="line"><span class="comment">//                return SecondAnimatedRoutePage();</span></span><br><span class="line"><span class="comment">//              &#125;));</span></span><br><span class="line">              <span class="comment">/// 使用PageRouteBuilder</span></span><br><span class="line">              Navigator.push(</span><br><span class="line">                  context,</span><br><span class="line">                  PageRouteBuilder(</span><br><span class="line">                      transitionDuration: <span class="built_in">Duration</span>(milliseconds: <span class="number">800</span>),<span class="comment">/// 设置过渡时间</span></span><br><span class="line">                      pageBuilder: (BuildContext context,</span><br><span class="line">                          Animation&lt;<span class="built_in">double</span>&gt; animation,</span><br><span class="line">                          Animation&lt;<span class="built_in">double</span>&gt; secondaryAnimation) &#123;</span><br><span class="line">                        <span class="comment">/// 平移动画</span></span><br><span class="line">                        <span class="keyword">return</span> SlideTransition(</span><br><span class="line">                          <span class="comment">/// 补间动画</span></span><br><span class="line">                          position: Tween&lt;Offset&gt;(</span><br><span class="line">                            <span class="comment">/// 从右往左</span></span><br><span class="line"><span class="comment">//                    begin: const Offset(1.0, 0.0),</span></span><br><span class="line"><span class="comment">//                    end: const Offset(0.0, 0.0),</span></span><br><span class="line">                            <span class="comment">/// 从下往上 ，将第二页的app bar隐藏掉</span></span><br><span class="line">                            begin: <span class="keyword">const</span> Offset(<span class="number">0.0</span>, <span class="number">1.0</span>),</span><br><span class="line">                            end: <span class="keyword">const</span> Offset(<span class="number">0.0</span>, <span class="number">0.0</span>),</span><br><span class="line">                          ).animate(animation),</span><br><span class="line">                          child: SecondAnimatedRoutePage(),</span><br><span class="line">                        );</span><br><span class="line">                      &#125;));</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"跳转到第二页"</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="PageRouteBuilder-解析"><a href="#PageRouteBuilder-解析" class="headerlink" title="PageRouteBuilder 解析"></a>PageRouteBuilder 解析</h1><ul><li><p>必须要传递pageBuilder：RoutePageBuilder<br>包含三个参数：</p><ol><li>BuildContext context</li><li>Animation<double> animation</double></li><li>Animation<double> secondaryAnimation<br>需要返回一个AnimatedWidget</double></li></ol><ul><li>SlideTransition</li><li>RotationTransition</li><li>ScaleTransition</li><li>PositionedTransition</li></ul></li><li><p>transitionDuration 设置动画过渡时间</p></li></ul><h1 id="SlideTransition解析"><a href="#SlideTransition解析" class="headerlink" title="SlideTransition解析"></a>SlideTransition解析</h1><ul><li>必须要传递：position: Animatio—&gt; Tween</li><li>child: 传递要跳转的页面</li></ul><h1 id="Offset：二维点偏移量对象"><a href="#Offset：二维点偏移量对象" class="headerlink" title="Offset：二维点偏移量对象"></a>Offset：二维点偏移量对象</h1><h1 id="动画组合"><a href="#动画组合" class="headerlink" title="动画组合"></a>动画组合</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomMainRouteCombine</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"主页—&gt; 自定义路由动画"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"主页第一行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line"><span class="comment">//              Navigator.push(context, MaterialPageRoute(builder: (context) &#123;</span></span><br><span class="line"><span class="comment">//                return SecondAnimatedRoutePage();</span></span><br><span class="line"><span class="comment">//              &#125;));</span></span><br><span class="line">              <span class="comment">/// 使用PageRouteBuilder</span></span><br><span class="line">              Navigator.push(</span><br><span class="line">                  context,</span><br><span class="line">                  PageRouteBuilder(</span><br><span class="line">                      transitionDuration: <span class="built_in">Duration</span>(milliseconds: <span class="number">800</span>),</span><br><span class="line"></span><br><span class="line">                      <span class="comment">/// 设置过渡时间</span></span><br><span class="line">                      pageBuilder: (BuildContext context,</span><br><span class="line">                          Animation&lt;<span class="built_in">double</span>&gt; animation,</span><br><span class="line">                          Animation&lt;<span class="built_in">double</span>&gt; secondaryAnimation) &#123;</span><br><span class="line">                        <span class="keyword">return</span> FadeTransition(</span><br><span class="line">                          opacity: animation,</span><br><span class="line">                          child: RotationTransition(</span><br><span class="line">                            turns: Tween&lt;<span class="built_in">double</span>&gt;(</span><br><span class="line">                              begin: <span class="number">0.5</span>,</span><br><span class="line">                              end: <span class="number">1.0</span>,</span><br><span class="line">                            ).animate(animation),</span><br><span class="line">                            child: SecondAnimatedRoutePage(),</span><br><span class="line">                          ),</span><br><span class="line">                        );</span><br><span class="line">                      &#125;));</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"跳转到第二页"</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用PageRouteBuilder自定义动画&quot;&gt;&lt;a href=&quot;#使用PageRouteBuilder自定义动画&quot; class=&quot;headerlink&quot; title=&quot;使用PageRouteBuilder自定义动画&quot;&gt;&lt;/a&gt;使用PageRouteBuilde
      
    
    </summary>
    
    
      <category term="flutter" scheme="http://www.freelabor.work/tags/flutter/"/>
    
      <category term="flutter-路由" scheme="http://www.freelabor.work/tags/flutter-%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>2.2 Flutter-命名路由</title>
    <link href="http://www.freelabor.work/2020/06/02/6CDBCAF6-5FB4-4041-8E2C-36101B4F2746/"/>
    <id>http://www.freelabor.work/2020/06/02/6CDBCAF6-5FB4-4041-8E2C-36101B4F2746/</id>
    <published>2020-06-02T07:40:53.000Z</published>
    <updated>2020-06-04T15:34:12.072Z</updated>
    
    <content type="html"><![CDATA[<p>给路由起一个名字，然后可以通过路由名字直接打开新的路由。</p><h1 id="注册路由"><a href="#注册路由" class="headerlink" title="注册路由"></a>注册路由</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameRouteApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Flutter Named Router Demo"</span>,</span><br><span class="line"></span><br><span class="line">      <span class="comment">/// 注册路由表</span></span><br><span class="line">      routes: &#123;</span><br><span class="line">        <span class="comment">/// ‘/’是一个特殊地质，特指第一个页面</span></span><br><span class="line">        <span class="string">"/"</span>: (context) =&gt; MainNamedRoute(),</span><br><span class="line">        <span class="string">"second_page"</span>: (context) =&gt; SecondNamedRoutePage(),</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="通过Navigator-pushNamed-跳转到下一页"><a href="#通过Navigator-pushNamed-跳转到下一页" class="headerlink" title="通过Navigator.pushNamed()跳转到下一页"></a>通过<code>Navigator.pushNamed()</code>跳转到下一页</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainNamedRoute</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"命名路由的主页"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"主页第一行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              Navigator.pushNamed(context, <span class="string">"second_page"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"进入命名路由的第二个页面"</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="简单结束页面Navigator-pop"><a href="#简单结束页面Navigator-pop" class="headerlink" title="简单结束页面Navigator.pop()"></a>简单结束页面<code>Navigator.pop()</code></h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecondNamedRoutePage</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"命名路由第二个页面"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"第二页的第一行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              <span class="comment">//    结束当前页面</span></span><br><span class="line">              Navigator.pop(context);</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"结束当前页面"</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h1><p>优点：可以通过语义化的字符串来管理路由。<br>缺点：不能直接传递路由参数。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给路由起一个名字，然后可以通过路由名字直接打开新的路由。&lt;/p&gt;
&lt;h1 id=&quot;注册路由&quot;&gt;&lt;a href=&quot;#注册路由&quot; class=&quot;headerlink&quot; title=&quot;注册路由&quot;&gt;&lt;/a&gt;注册路由&lt;/h1&gt;&lt;figure class=&quot;highlight dart
      
    
    </summary>
    
    
      <category term="￼￼￼￼flutter" scheme="http://www.freelabor.work/tags/%EF%BF%BC%EF%BF%BC%EF%BF%BC%EF%BF%BCflutter/"/>
    
      <category term=" flutter-路由" scheme="http://www.freelabor.work/tags/flutter-%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>2.1 Flutter-路由导航</title>
    <link href="http://www.freelabor.work/2020/06/02/AC69EF57-F25D-4CD1-B0F6-6634782E73F8/"/>
    <id>http://www.freelabor.work/2020/06/02/AC69EF57-F25D-4CD1-B0F6-6634782E73F8/</id>
    <published>2020-06-02T07:38:06.000Z</published>
    <updated>2020-06-04T15:34:12.077Z</updated>
    
    <content type="html"><![CDATA[<h1 id="路由管理"><a href="#路由管理" class="headerlink" title="路由管理"></a>路由管理</h1><ol><li><p>主要通过Navigator跳转到下一个widget,<code>Navigator.push()</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Navigator.push(context, MaterialPageRoute(builder: (context) &#123;</span><br><span class="line">  <span class="keyword">return</span> SecondRoute();</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></li><li><p>进入到第二个页面，结束当前那个widget,<code>Navigator.pop()</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.pop(context);</span><br></pre></td></tr></table></figure></li></ol><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:io'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/foundation.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() &#123;</span><br><span class="line">  FlutterError.onError = (FlutterErrorDetails details) &#123;</span><br><span class="line">    FlutterError.dumpErrorToConsole(details);</span><br><span class="line">    <span class="keyword">if</span> (kReleaseMode) exit(<span class="number">1</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  runApp(NavigatorApp());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NavigatorApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> MaterialApp(</span><br><span class="line">      title: <span class="string">"Flutter Navigator Demo"</span>,</span><br><span class="line">      home: MainRoute(),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainRoute</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"主页"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"第一个页面"</span>),</span><br><span class="line">          Text(<span class="string">"第二行"</span>),</span><br><span class="line">          Text(<span class="string">"第三行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              <span class="comment">/// 跳转到下一个页面</span></span><br><span class="line">              Navigator.push(context, MaterialPageRoute(builder: (context) &#123;</span><br><span class="line">                <span class="keyword">return</span> SecondRoute();</span><br><span class="line">              &#125;));</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"进入第二页"</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SecondRoute</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"第二个页面"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: Column(</span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          Text(<span class="string">"这里是第二个页面的第一行"</span>),</span><br><span class="line">          RaisedButton(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              <span class="comment">/// 结束当前页面</span></span><br><span class="line">              Navigator.pop(context);</span><br><span class="line">            &#125;,</span><br><span class="line">            child: Text(<span class="string">"结束此页面"</span>),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="quiver-image-url/AAF570D11D930B028E3C3AE96D6FC577.jpg =301x639" alt="第一页"><br>点击“进入第二页”按钮后<br><img src="quiver-image-url/3F215745089BCEE96267BBEC52CF884B.jpg =301x639" alt="第二页"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;路由管理&quot;&gt;&lt;a href=&quot;#路由管理&quot; class=&quot;headerlink&quot; title=&quot;路由管理&quot;&gt;&lt;/a&gt;路由管理&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;主要通过Navigator跳转到下一个widget,&lt;code&gt;Navigator.push()&lt;/cod
      
    
    </summary>
    
    
      <category term="flutter" scheme="http://www.freelabor.work/tags/flutter/"/>
    
      <category term="flutter-路由" scheme="http://www.freelabor.work/tags/flutter-%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title>输出Java的Stack Element信息</title>
    <link href="http://www.freelabor.work/2020/06/02/A0C7D1BC-B847-4445-AACD-F0D539724A25/"/>
    <id>http://www.freelabor.work/2020/06/02/A0C7D1BC-B847-4445-AACD-F0D539724A25/</id>
    <published>2020-06-02T02:46:01.000Z</published>
    <updated>2020-06-04T15:34:12.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在main-上运行"><a href="#在main-上运行" class="headerlink" title="在main()上运行"></a>在main()上运行</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStackElement</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 当在main方法运行时</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &#123;<span class="doctag">@link</span> Thread#currentThread()&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Thread currentThread = Thread.currentThread();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;</span></span><br><span class="line"><span class="comment">         *     console:</span></span><br><span class="line"><span class="comment">         *     Thread[main,5,main]</span></span><br><span class="line"><span class="comment">         * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(currentThread);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &#123;<span class="doctag">@link</span> Thread#getStackTrace()&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        StackTraceElement[] stackTrace = currentThread.getStackTrace();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;</span></span><br><span class="line"><span class="comment">         *     console:</span></span><br><span class="line"><span class="comment">         *     2</span></span><br><span class="line"><span class="comment">         * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(stackTrace.length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;</span></span><br><span class="line"><span class="comment">         *     console:</span></span><br><span class="line"><span class="comment">         *      java.lang.Thread.getStackTrace(Thread.java:1559)</span></span><br><span class="line"><span class="comment">         *      test.TestStackElement.main(TestStackElement.java:25)</span></span><br><span class="line"><span class="comment">         * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (StackTraceElement ste :</span><br><span class="line">                stackTrace) &#123;</span><br><span class="line">            System.out.println(ste);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StackTraceElement topStackTraceElement = stackTrace[stackTrace.length - <span class="number">1</span>];</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;</span></span><br><span class="line"><span class="comment">         *     console:</span></span><br><span class="line"><span class="comment">         *     main</span></span><br><span class="line"><span class="comment">         * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(topStackTraceElement.getMethodName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="被main-直接调用"><a href="#被main-直接调用" class="headerlink" title="被main()直接调用"></a>被main()直接调用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    testMethod();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当main()—&gt; testMethod()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Thread#currentThread()&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Thread currentThread = Thread.currentThread();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     Thread[main,5,main]</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(currentThread);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Thread#getStackTrace()&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    StackTraceElement[] stackTrace = currentThread.getStackTrace();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     3</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(stackTrace.length);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *      java.lang.Thread.getStackTrace(Thread.java:1559)</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement.testMethod(TestStackElement.java:28)</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement.main(TestStackElement.java:6)</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span> (StackTraceElement ste :</span><br><span class="line">            stackTrace) &#123;</span><br><span class="line">        System.out.println(ste);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    StackTraceElement topStackTraceElement = stackTrace[stackTrace.length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     -----top-----</span></span><br><span class="line"><span class="comment">     *      main</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement</span></span><br><span class="line"><span class="comment">     *      TestStackElement.java</span></span><br><span class="line"><span class="comment">     *      6</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----top-----"</span>);</span><br><span class="line">    System.out.println(topStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(topStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(topStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(topStackTraceElement.getLineNumber());</span><br><span class="line"></span><br><span class="line">    StackTraceElement secondTopStackTraceElement = stackTrace[stackTrace.length - <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     -----second top-----</span></span><br><span class="line"><span class="comment">     *      testMethod</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement</span></span><br><span class="line"><span class="comment">     *      TestStackElement.java</span></span><br><span class="line"><span class="comment">     *      28  ：&#123;<span class="doctag">@link</span> currentThread.getStackTrace()&#125;的位置</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----second top-----"</span>);</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getLineNumber());</span><br><span class="line"></span><br><span class="line">    StackTraceElement firstStackTraceElement = stackTrace[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     -----first-----</span></span><br><span class="line"><span class="comment">     *      getStackTrace</span></span><br><span class="line"><span class="comment">     *      java.lang.Thread</span></span><br><span class="line"><span class="comment">     *      Thread.java</span></span><br><span class="line"><span class="comment">     *      1559 : &#123;<span class="doctag">@link</span> Thread&#125;第1559行</span></span><br><span class="line"><span class="comment">     *      &lt;code&gt;</span></span><br><span class="line"><span class="comment">     *                      return (new Exception()).getStackTrace();</span></span><br><span class="line"><span class="comment">     *      &lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----first-----"</span>);</span><br><span class="line">    System.out.println(firstStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(firstStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(firstStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(firstStackTraceElement.getLineNumber());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="被main-间接调用"><a href="#被main-间接调用" class="headerlink" title="被main()间接调用"></a>被main()间接调用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    testInterMethod();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testInterMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    testMethod();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当&#123;<span class="doctag">@link</span> #main(String[])&#125;—&gt; &#123;<span class="doctag">@link</span> #testInterMethod()&#125;—&gt; &#123;<span class="doctag">@link</span> #testMethod()&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Thread#currentThread()&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Thread currentThread = Thread.currentThread();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     Thread[main,5,main]</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(currentThread);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Thread#getStackTrace()&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    StackTraceElement[] stackTrace = currentThread.getStackTrace();</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     4</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(stackTrace.length);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *      java.lang.Thread.getStackTrace(Thread.java:1559)</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement.testMethod(TestStackElement.java:32)</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement.testInterMethod(TestStackElement.java:10)</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement.main(TestStackElement.java:6)</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">for</span> (StackTraceElement ste :</span><br><span class="line">            stackTrace) &#123;</span><br><span class="line">        System.out.println(ste);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    StackTraceElement topStackTraceElement = stackTrace[stackTrace.length - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     -----top-----</span></span><br><span class="line"><span class="comment">     *      main</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement</span></span><br><span class="line"><span class="comment">     *      TestStackElement.java</span></span><br><span class="line"><span class="comment">     *      6</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----top-----"</span>);</span><br><span class="line">    System.out.println(topStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(topStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(topStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(topStackTraceElement.getLineNumber());</span><br><span class="line"></span><br><span class="line">    StackTraceElement secondTopStackTraceElement = stackTrace[stackTrace.length - <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *     -----second top-----</span></span><br><span class="line"><span class="comment">     *      testInterMethod</span></span><br><span class="line"><span class="comment">     *      test.TestStackElement</span></span><br><span class="line"><span class="comment">     *      TestStackElement.java</span></span><br><span class="line"><span class="comment">     *      10</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----second top-----"</span>);</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(secondTopStackTraceElement.getLineNumber());</span><br><span class="line"></span><br><span class="line">    StackTraceElement thirdTopStackTraceElement = stackTrace[stackTrace.length - <span class="number">3</span>];</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *      -----third top-----</span></span><br><span class="line"><span class="comment">     *          testMethod</span></span><br><span class="line"><span class="comment">     *          test.TestStackElement</span></span><br><span class="line"><span class="comment">     *          TestStackElement.java</span></span><br><span class="line"><span class="comment">     *          32 ：&#123;<span class="doctag">@link</span> currentThread.getStackTrace()&#125;的位置</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----third top-----"</span>);</span><br><span class="line">    System.out.println(thirdTopStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(thirdTopStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(thirdTopStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(thirdTopStackTraceElement.getLineNumber());</span><br><span class="line"></span><br><span class="line">    StackTraceElement firstStackTraceElement = stackTrace[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     *     console:</span></span><br><span class="line"><span class="comment">     *     -----first-----</span></span><br><span class="line"><span class="comment">     *      getStackTrace</span></span><br><span class="line"><span class="comment">     *      java.lang.Thread</span></span><br><span class="line"><span class="comment">     *      Thread.java</span></span><br><span class="line"><span class="comment">     *      1559 : &#123;<span class="doctag">@link</span> Thread&#125;第1559行</span></span><br><span class="line"><span class="comment">     *      &lt;code&gt;</span></span><br><span class="line"><span class="comment">     *                      return (new Exception()).getStackTrace();</span></span><br><span class="line"><span class="comment">     *      &lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="string">"-----first-----"</span>);</span><br><span class="line">    System.out.println(firstStackTraceElement.getMethodName());</span><br><span class="line">    System.out.println(firstStackTraceElement.getClassName());</span><br><span class="line">    System.out.println(firstStackTraceElement.getFileName());</span><br><span class="line">    System.out.println(firstStackTraceElement.getLineNumber());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在main-上运行&quot;&gt;&lt;a href=&quot;#在main-上运行&quot; class=&quot;headerlink&quot; title=&quot;在main()上运行&quot;&gt;&lt;/a&gt;在main()上运行&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java小技巧" scheme="http://www.freelabor.work/tags/java%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>利用反射、注解、动态代理实现OnClick事件的自动注入</title>
    <link href="http://www.freelabor.work/2020/05/21/4821B42E-6850-43FC-9C6D-29188C8E3304/"/>
    <id>http://www.freelabor.work/2020/05/21/4821B42E-6850-43FC-9C6D-29188C8E3304/</id>
    <published>2020-05-21T08:13:07.000Z</published>
    <updated>2020-06-04T15:34:12.063Z</updated>
    
    <content type="html"><![CDATA[<p>需要先创建MockOnClick注解、然后通过在Activity注入，在注入的方法里面，进行动态代理。</p><h1 id="简单实现"><a href="#简单实现" class="headerlink" title="简单实现"></a>简单实现</h1><h2 id="定义MockOnClickAnnotation"><a href="#定义MockOnClickAnnotation" class="headerlink" title="定义MockOnClickAnnotation"></a>定义MockOnClickAnnotation</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 16:24</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MockOnClickAnnotation &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="keyword">int</span>[] value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建ClickEventInjector"><a href="#创建ClickEventInjector" class="headerlink" title="创建ClickEventInjector"></a>创建ClickEventInjector</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 16:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClickEventInjector</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ClickEventInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(<span class="keyword">final</span> Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有的Field：&#123;<span class="doctag">@link</span> Class#getDeclaredMethods()&#125; ()&#125; —&gt; methods</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Method[] methods = activity.getClass().getDeclaredMethods();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 遍历fields:&#123;<span class="doctag">@link</span> Method[]&#125;,过滤有&#123;<span class="doctag">@link</span> MockOnClickAnnotation&#125;的&#123;<span class="doctag">@link</span> Method&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (Method method :</span><br><span class="line">                methods) &#123;</span><br><span class="line">            <span class="keyword">if</span> (method.isAnnotationPresent(MockOnClickAnnotation.class)) &#123;</span><br><span class="line">                MockOnClickAnnotation annotation = method.getAnnotation(MockOnClickAnnotation.class);</span><br><span class="line">                <span class="keyword">int</span>[] ids = annotation.value();</span><br><span class="line">                <span class="keyword">for</span> (Integer id :</span><br><span class="line">                        ids) &#123;</span><br><span class="line">                    <span class="keyword">final</span> View view = activity.findViewById(id);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//    使用动态代理进行实现</span></span><br><span class="line">                    <span class="keyword">final</span> View.OnClickListener l = (View.OnClickListener) Proxy.newProxyInstance(activity.getClassLoader(), <span class="keyword">new</span> Class[]&#123;View.OnClickListener.class&#125;, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                            <span class="keyword">return</span> method.invoke(activity, args);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    view.setOnClickListener(l);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 在这里，&#123;<span class="doctag">@link</span> View&#125;可以设置点击监听，但是需要有一个代理响应才行，</span></span><br><span class="line"><span class="comment">                     * &#123;<span class="doctag">@link</span> Activity&#125;本身没有点击事件，所以需要用&#123;<span class="doctag">@link</span> View.OnClickListener&#125;才行</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line"><span class="comment">//                    view.setOnClickListener(new View.OnClickListener() &#123;</span></span><br><span class="line"><span class="comment">//                        @Override</span></span><br><span class="line"><span class="comment">//                        public void onClick(View v) &#123;</span></span><br><span class="line"><span class="comment">//                            /**</span></span><br><span class="line"><span class="comment">//                             * 这里是不是可以这样执行呢？其实这样也是可以的</span></span><br><span class="line"><span class="comment">//                             */</span></span><br><span class="line"><span class="comment">//                            if (activity instanceof View.OnClickListener) &#123;</span></span><br><span class="line"><span class="comment">//                                ((View.OnClickListener) activity).onClick(view);</span></span><br><span class="line"><span class="comment">//                            &#125;</span></span><br><span class="line"><span class="comment">//                        &#125;</span></span><br><span class="line"><span class="comment">//                    &#125;);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="高级实现"><a href="#高级实现" class="headerlink" title="高级实现"></a>高级实现</h1><p>如果是想要将点击和长按点击都实现在里面呢？那么这个时候就要优化一下才行了。<br>需要多创建一个点击事件的元注解</p><h2 id="创建事件类型元注解"><a href="#创建事件类型元注解" class="headerlink" title="创建事件类型元注解"></a>创建事件类型元注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.ANNOTATION_TYPE)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EventType &#123;</span><br><span class="line">    Class&lt;?&gt; listenType();</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">listenerSetterMethodName</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点击事件注解"><a href="#点击事件注解" class="headerlink" title="点击事件注解"></a>点击事件注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:15</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@EventType</span>(listenType = View.OnClickListener.class, listenerSetterMethodName = <span class="string">"setOnClickListener"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MockOnClick &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="keyword">int</span>[] value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="长按点击事件注解"><a href="#长按点击事件注解" class="headerlink" title="长按点击事件注解"></a>长按点击事件注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@EventType</span>(listenType = View.OnLongClickListener.class,listenerSetterMethodName = <span class="string">"setOnLongClickListener"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> MockOnLongClick &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="keyword">int</span>[] value();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定义注入器"><a href="#定义注入器" class="headerlink" title="定义注入器"></a>定义注入器</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElegantClickInjector</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ElegantClickInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(<span class="keyword">final</span> Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取字节码对象：&#123;<span class="doctag">@link</span> Activity#getClass()&#125; —&gt; &#123;<span class="doctag">@link</span> Class&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Class&lt;? extends Activity&gt; clazz = activity.getClass();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取Activity声明的方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Method[] declaredMethods = clazz.getDeclaredMethods();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> Method method : declaredMethods) &#123;</span><br><span class="line"></span><br><span class="line">            Annotation[] annotations = method.getAnnotations();</span><br><span class="line">            <span class="keyword">for</span> (Annotation annotation :</span><br><span class="line">                    annotations) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 注解上判断是否存在某个元注解，需要先获取annotationType:&#123;<span class="doctag">@link</span> Annotation#annotationType()&#125;</span></span><br><span class="line"><span class="comment">                 * 然后通过&#123;<span class="doctag">@link</span> Class#isAnnotationPresent(Class)&#125; 来判断</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                Class&lt;? extends Annotation&gt; annotationType = annotation.annotationType();</span><br><span class="line">                <span class="keyword">if</span> (annotationType.isAnnotationPresent(EventType.class)) &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 拿到元注解&#123;<span class="doctag">@link</span> Class#getAnnotation(Class)&#125; —&gt; &#123;<span class="doctag">@link</span> Annotation&#125;/&#123;<span class="doctag">@link</span> EventType&#125;</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    EventType eventType = annotationType.getAnnotation(EventType.class);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 获取到事件类型元注解上的事件的字节码&#123;<span class="doctag">@link</span> EventType#listenType()&#125;</span></span><br><span class="line"><span class="comment">                     * 和设置点击事件的方法&#123;<span class="doctag">@link</span> EventType#listenerSetterMethodName()&#125;</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    Class&lt;?&gt; listenTypeClass = eventType.listenType();</span><br><span class="line">                    String listenerSetterMethodName = eventType.listenerSetterMethodName();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 已经拿到监听事件的字节码和监听方法的名称了，接下来就需要拿到对应的ids</span></span><br><span class="line"><span class="comment">                     * 但annotation不能直接拿到id，需要先通过&#123;<span class="doctag">@link</span> annotationType&#125;拿到声明的方法。</span></span><br><span class="line"><span class="comment">                     * 当然如果使用&#123;<span class="doctag">@code</span> &#123;<span class="doctag">@link</span> annotation&#125; instanceof &#123;<span class="doctag">@link</span> MockOnClick&#125;/&#123;<span class="doctag">@link</span> MockOnLongClick&#125;也可以，</span></span><br><span class="line"><span class="comment">                     * 但是扩展性不好，所以通过字节码的获取声明的方法来那是最好的了。</span></span><br><span class="line"><span class="comment">                     * &#123;<span class="doctag">@link</span> Class#getDeclaredMethod(String, Class[])&#125; —&gt; &#123;<span class="doctag">@link</span> Method&#125;</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Method valueMethod = annotationType.getDeclaredMethod(<span class="string">"value"</span>);</span><br><span class="line">                        <span class="comment">/**</span></span><br><span class="line"><span class="comment">                         * &#123;<span class="doctag">@link</span> Method#invoke(Object, Object...)&#125; —&gt; &#123;<span class="doctag">@link</span> Integer[]&#125;</span></span><br><span class="line"><span class="comment">                         */</span></span><br><span class="line">                        Object invokeResult = valueMethod.invoke(annotation);</span><br><span class="line">                        <span class="keyword">if</span> (invokeResult <span class="keyword">instanceof</span> <span class="keyword">int</span>[]) &#123;</span><br><span class="line">                            <span class="keyword">int</span>[] ids = (<span class="keyword">int</span>[]) invokeResult;</span><br><span class="line"></span><br><span class="line">                            <span class="comment">/**</span></span><br><span class="line"><span class="comment">                             * 拿到&#123;<span class="doctag">@link</span> ids&#125;，遍历并且找到对应的View</span></span><br><span class="line"><span class="comment">                             */</span></span><br><span class="line">                            <span class="keyword">for</span> (Integer id :</span><br><span class="line">                                    ids) &#123;</span><br><span class="line">                                View view = activity.findViewById(id);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                 * 最后思考一下如何调用Activity的方法了</span></span><br><span class="line"><span class="comment">                                 */</span></span><br><span class="line">                                method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                                Object listenerProxy = Proxy.newProxyInstance(listenTypeClass.getClassLoader(), <span class="keyword">new</span> Class[]&#123;listenTypeClass&#125;, <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                                    <span class="meta">@Override</span></span><br><span class="line">                                    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method m, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                                        <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                         * 在这里执行&#123;<span class="doctag">@link</span> Activity&#125;的方法</span></span><br><span class="line"><span class="comment">                                         */</span></span><br><span class="line">                                        <span class="keyword">return</span> method.invoke(activity, args);</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;);</span><br><span class="line"></span><br><span class="line">                                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                 * 寻找特定的方法&#123;<span class="doctag">@link</span> Class#getMethod(String, Class[])&#125;</span></span><br><span class="line"><span class="comment">                                 */</span></span><br><span class="line">                                Method setter = view.getClass().getMethod(listenerSetterMethodName, listenTypeClass);</span><br><span class="line">                                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                                 * 在这里执行监听方法，出入一个监听器的代理对象进去&#123;<span class="doctag">@link</span> listenerProxy&#125;，而在动态代理那里，真正执行的确实&#123;<span class="doctag">@link</span> Activity&#125;的方法</span></span><br><span class="line"><span class="comment">                                 */</span></span><br><span class="line">                                setter.invoke(view, listenerProxy);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Test"><a href="#Test" class="headerlink" title="@Test"></a>@Test</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-21 17:03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElegantClickActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_study);</span><br><span class="line">        ElegantClickInjector.inject(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@MockOnClick</span>(&#123;R.id.mock_tv,R.id.android_tv&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.android_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"android-mock"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.mock_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"Mock-mock"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里的长按点击方法要和&#123;<span class="doctag">@link</span> View#setOnLongClickListener(View.OnLongClickListener)&#125;一样，要有返回值才行。</span></span><br><span class="line"><span class="comment">     * 否则动态代理是会提示参数错误问题，而且必须要添加view进去</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@MockOnLongClick</span>(&#123;R.id.mock_tv,R.id.android_tv&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.android_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"android-mock-long"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.mock_tv:</span><br><span class="line">                Toast.makeText(<span class="keyword">this</span>, <span class="string">"Mock-mock-long"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;需要先创建MockOnClick注解、然后通过在Activity注入，在注入的方法里面，进行动态代理。&lt;/p&gt;
&lt;h1 id=&quot;简单实现&quot;&gt;&lt;a href=&quot;#简单实现&quot; class=&quot;headerlink&quot; title=&quot;简单实现&quot;&gt;&lt;/a&gt;简单实现&lt;/h1&gt;&lt;h2 id
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java进阶" scheme="http://www.freelabor.work/tags/java%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>实现Intent注入工具</title>
    <link href="http://www.freelabor.work/2020/05/19/5E1BDC3B-57B1-4395-92D8-8B6AD5C4BA3D/"/>
    <id>http://www.freelabor.work/2020/05/19/5E1BDC3B-57B1-4395-92D8-8B6AD5C4BA3D/</id>
    <published>2020-05-19T07:55:56.000Z</published>
    <updated>2020-06-04T15:34:12.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义注解类"><a href="#定义注解类" class="headerlink" title="定义注解类"></a>定义注解类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> AutoWired &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定义注入工具类"><a href="#定义注入工具类" class="headerlink" title="定义注入工具类"></a>定义注入工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 15:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InjectUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InjectUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//no instance</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有成员变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Field[] declaredFields = activity.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (declaredFields != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Field f :</span><br><span class="line">                    declaredFields) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 判断是否存在&#123;<span class="doctag">@link</span> InjectView&#125;的注解</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">if</span> (f.isAnnotationPresent(InjectView.class)) &#123;</span><br><span class="line">                        InjectView annotation = f.getAnnotation(InjectView.class);<span class="comment">//    拿到对应的注解</span></span><br><span class="line">                        <span class="keyword">int</span> id = ((InjectView) annotation).value();<span class="comment">//    获取到对应的id值</span></span><br><span class="line">                        View v = activity.findViewById(id);<span class="comment">//    通过activity找到view</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            f.setAccessible(<span class="keyword">true</span>);<span class="comment">//    暴力设置成员变量可访问</span></span><br><span class="line">                            f.set(activity, v);<span class="comment">//    通过反射设置成员变量的值</span></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定义实体类"><a href="#定义实体类" class="headerlink" title="定义实体类"></a>定义实体类</h1><h2 id="User"><a href="#User" class="headerlink" title="User"></a>User</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:38</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"name= "</span> + name + <span class="string">",age="</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Gift"><a href="#Gift" class="headerlink" title="Gift"></a>Gift</h2><ol><li>实现<code>Parcelable</code></li><li>自动生成方法</li><li>定义成员变量</li><li>在writeToParcel方法，有序序列化</li><li>在Gift(Parcel in)有序反序列化，要和在writeToParcel方法的顺序一致。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:52</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Gift</span> <span class="keyword">implements</span> <span class="title">Parcelable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> weight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Gift</span><span class="params">(String name, <span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Gift</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">        name = in.readString();</span><br><span class="line">        weight = in.readInt();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;Gift&gt; CREATOR = <span class="keyword">new</span> Creator&lt;Gift&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Gift <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Gift(in);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Gift[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Gift[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name);</span><br><span class="line">        dest.writeInt(weight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">"Gift=[name=%s,weight=%d]"</span>, name, weight);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="传递数据"><a href="#传递数据" class="headerlink" title="传递数据"></a>传递数据</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> intent = Intent()</span><br><span class="line">  intent.setClass(activity as Context, SecondActivity::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span>;</span><br><span class="line">  intent.putExtra(<span class="string">"intKey"</span>, <span class="number">3140</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"defaultInt"</span>, <span class="number">42</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"c"</span>, <span class="string">'z'</span>)</span><br><span class="line"><span class="comment">//            intent.putExtra("b", 12)</span></span><br><span class="line">  intent.putExtra(<span class="string">"f"</span>, <span class="number">3.1415926f</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"d"</span>, <span class="number">1.123456</span>)</span><br><span class="line">  intent.putExtra(<span class="string">"l"</span>, <span class="number">13800138000L</span>)</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"s"</span>, <span class="string">"字符串"</span>)</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"user"</span>, User(<span class="string">"Kennedy"</span>, <span class="number">33</span>))</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"intArray"</span>, arrayOf(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line">  intent.putExtra(<span class="string">"strList"</span>, mutableListOf&lt;String&gt;(<span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>) as ArrayList)</span><br><span class="line"></span><br><span class="line">  intent.putExtra(</span><br><span class="line">      <span class="string">"giftList"</span>,</span><br><span class="line">      mutableListOf&lt;Gift&gt;(Gift(<span class="string">"礼物1"</span>, <span class="number">2</span>), Gift(<span class="string">"礼物2"</span>, <span class="number">4</span>), Gift(<span class="string">"礼物3"</span>, <span class="number">8</span>)) as ArrayList</span><br><span class="line">  )</span><br><span class="line">  intent.putExtra(</span><br><span class="line">      <span class="string">"giftArray"</span>,</span><br><span class="line">      arrayOf(Gift(<span class="string">"礼物4"</span>, <span class="number">16</span>), Gift(<span class="string">"礼物5"</span>, <span class="number">32</span>), Gift(<span class="string">"礼物6"</span>, <span class="number">64</span>)) as Array&lt;Gift&gt;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  activity?.startActivity(intent)</span><br></pre></td></tr></table></figure><h1 id="注入并自动获取"><a href="#注入并自动获取" class="headerlink" title="注入并自动获取"></a>注入并自动获取</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Kenny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2020-05-19 16:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@InjectView</span>(R.id.second_tv)</span><br><span class="line">    TextView tvSecond;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span>(<span class="string">"intKey"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span>()</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> defaultInt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span> b;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> f;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> d;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> Long l;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> String s;</span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> String ss;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> Integer[] intArray;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; strList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#123;<span class="doctag">@link</span> Gift&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Gift&gt; giftList;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutoWired</span></span><br><span class="line">    <span class="keyword">private</span> Gift[] giftArray;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_second);</span><br><span class="line"></span><br><span class="line">        InjectUtils.inject(<span class="keyword">this</span>);</span><br><span class="line">        IntentInjectUtil.inject(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//    遍历所有的自动注入字段的值</span></span><br><span class="line">        Field[] declaredFields = SecondActivity.class.getDeclaredFields();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (Field f :</span><br><span class="line">                declaredFields) &#123;</span><br><span class="line">            <span class="keyword">if</span> (f.isAnnotationPresent(AutoWired.class)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Object value = f.get(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (f.getType().isArray()) &#123;<span class="comment">//    处理数组或者集合的情况</span></span><br><span class="line">                        Object[] vs = (Object[]) value;</span><br><span class="line">                        StringBuilder sb1 = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                        <span class="keyword">for</span> (Object o :</span><br><span class="line">                                vs) &#123;</span><br><span class="line">                            sb1.append(o).append(<span class="string">","</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (sb1.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                            sb1.delete(sb1.length() - <span class="number">1</span>, sb1.length());</span><br><span class="line">                        &#125;</span><br><span class="line">                        value = sb1.toString();</span><br><span class="line">                    &#125;</span><br><span class="line">                    sb.append(f.getName()).append(<span class="string">" - "</span>).append(value).append(<span class="string">"\n"</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        tvSecond.setText(sb.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定义注解类&quot;&gt;&lt;a href=&quot;#定义注解类&quot; class=&quot;headerlink&quot; title=&quot;定义注解类&quot;&gt;&lt;/a&gt;定义注解类&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java进阶" scheme="http://www.freelabor.work/tags/java%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>模仿ButterKnife的BindView</title>
    <link href="http://www.freelabor.work/2020/05/19/F608C5DA-7844-41C9-B5CB-9306298CEDEF/"/>
    <id>http://www.freelabor.work/2020/05/19/F608C5DA-7844-41C9-B5CB-9306298CEDEF/</id>
    <published>2020-05-19T07:50:41.000Z</published>
    <updated>2020-06-04T15:34:12.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义注解"><a href="#定义注解" class="headerlink" title="定义注解"></a>定义注解</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.FIELD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> InjectView &#123;</span><br><span class="line">    <span class="meta">@IdRes</span> <span class="function"><span class="keyword">int</span> <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="定义注入工具类"><a href="#定义注入工具类" class="headerlink" title="定义注入工具类"></a>定义注入工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InjectUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">InjectUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//no instance</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">inject</span><span class="params">(Activity activity)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有成员变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Field[] declaredFields = activity.getClass().getDeclaredFields();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (declaredFields != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Field f :</span><br><span class="line">                    declaredFields) &#123;</span><br><span class="line">                <span class="keyword">if</span> (f != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 判断是否存在&#123;<span class="doctag">@link</span> InjectView&#125;的注解</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">if</span> (f.isAnnotationPresent(InjectView.class)) &#123;</span><br><span class="line">                        InjectView annotation = f.getAnnotation(InjectView.class);<span class="comment">//    拿到对应的注解</span></span><br><span class="line">                        <span class="keyword">int</span> id = ((InjectView) annotation).value();<span class="comment">//    获取到对应的id值</span></span><br><span class="line">                        View v = activity.findViewById(id);<span class="comment">//    通过activity找到view</span></span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            f.setAccessible(<span class="keyword">true</span>);<span class="comment">//    暴力设置成员变量可访问</span></span><br><span class="line">                            f.set(activity, v);<span class="comment">//    通过反射设置成员变量的值</span></span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="在Activity页面使用注解并且初始化注入方法"><a href="#在Activity页面使用注解并且初始化注入方法" class="headerlink" title="在Activity页面使用注解并且初始化注入方法"></a>在Activity页面使用注解并且初始化注入方法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class MainActivity : AppCompatActivity() &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@InjectView</span>(R.id.nav_view)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> navView: BottomNavigationView? = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">     <span class="function">override fun <span class="title">onCreate</span><span class="params">(savedInstanceState: Bundle?)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.activity_main)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//    自定义注入工具</span></span><br><span class="line">        InjectUtils.inject(<span class="keyword">this</span>)</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定义注解&quot;&gt;&lt;a href=&quot;#定义注解&quot; class=&quot;headerlink&quot; title=&quot;定义注解&quot;&gt;&lt;/a&gt;定义注解&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="java" scheme="http://www.freelabor.work/tags/java/"/>
    
      <category term="java进阶" scheme="http://www.freelabor.work/tags/java%E8%BF%9B%E9%98%B6/"/>
    
  </entry>
  
</feed>
